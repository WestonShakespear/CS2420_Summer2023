
public class Tester {


	public static void main(String[] args) {
		System.out.println("Starting 5.30 Test");
		try{
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-198, -196, -193, -188, -185, -182, -180, -175, -173, -170, -165, -160, -156, -153, -149, -147, -145, -143, -139, -136, -134, -132, -129, -127, -125, -123, -121, -117, -112, -109, -106, -102, -99, -95, -92, -90, -87, -83, -78, -76, -72, -70, -66, -63, -58, -56, -54, -52, -48, -44, -42, -40, -36, -32, -28, -26, -23, -20, -18, -13, -9, -6, -2, 1, 3, 8, 12, 14, 17, 19, 21, 24, 29, 32, 35, 39, 42, 46, 48, 50, 52, 56, 61, 66, 70, 74, 76, 79, 81, 83, 86, 90, 92, 94, 96, 100, 105, 107, 109, 114, 118, 120, 123, 125, 129, 132, 135, 139, 144, 149, 151, 155, 159, 164, 167, 171, 173, 177, 179, 183, 188, 192, 197, 200, 203, 207, 209, 212, 215, 218, 222, 226, 229, 231, 234, 237, 241, 244, 246, 250, 254, 258, 263, 268, 271, 274, 277, 282, 285, 290, 292, 294, 297, 302, 305, 307, 311, 313, 316, 319, 321, 326, 330, 334, 339, 341, 343, 346, 351, 354, 356, 361, 363, 368, 371, 376, 379, 381, 384, 388, 392, 395, 400, 403, 405, 408, 413, 416, 418, 422, 427, 429, 434, 439, 443, 446, 448, 451, 456, 461}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-212, -207, -205, -201, -196, -192, -187, -185, -181, -177, -175, -172, -169, -167, -165, -162, -158, -153, -151, -149, -147, -144, -139, -136, -131, -129, -127, -123, -121, -118, -113, -110, -105, -103, -101, -98, -93, -91, -86, -81, -79, -75, -70, -65, -60, -55, -52, -47, -44, -39, -35, -30, -26, -21, -16, -11, -8, -5, 0, 2, 7, 9, 12, 14, 16, 18, 22, 24, 26, 28, 32, 36, 39, 44, 46, 49, 52, 56, 61, 64, 68, 73, 76, 79, 83, 85, 87, 90, 94, 98, 101, 104, 108, 113, 115, 118, 123, 127, 132, 134, 138, 142, 145, 150, 152, 154, 157, 162, 164, 168, 171, 176, 180, 184, 188, 190, 195, 200, 203, 207, 210, 213, 217, 222, 225, 228, 233, 238, 240, 245, 249, 253, 255, 257, 262, 264, 267, 269, 271, 276, 281, 284, 289, 294, 298, 300, 302, 307, 312, 316, 319, 322, 325, 330, 335, 337, 341, 343, 346, 348, 350, 353, 358, 360, 364, 369, 373, 377, 379, 383, 387, 390, 395, 399, 402, 404, 409, 413, 416, 420, 424, 426, 429, 432, 437, 441, 445, 449, 454, 458, 462, 466, 469, 474, 479, 484, 488, 490, 492, 495}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-38, -36, -31, -27, -24, -21, -17, -13, -8, -3, 2, 4, 6, 8, 13, 15, 17, 22, 27, 32, 35, 37, 39, 44, 47, 49, 51, 53, 55, 59, 62, 64, 67, 70, 75, 79, 82, 87, 92, 96, 101, 104, 106, 110, 113, 118, 120, 123, 126, 129, 134, 139, 143, 146, 151, 156, 160, 165, 167, 172, 176, 181, 184, 187, 190, 195, 200, 204, 206, 210, 213, 217, 221, 225, 229, 232, 234, 239, 243, 246, 251, 255, 259, 262, 265, 267, 272, 275, 278, 280, 284, 286, 289, 292, 296, 298, 301, 306, 310, 314, 318, 322, 326, 328, 333, 338, 342, 347, 350, 353, 356, 358, 360, 364, 368, 370, 374, 376, 379, 383, 387, 390, 392, 396, 401, 404, 406, 408, 410, 414, 418, 420, 424, 427, 429, 431, 436, 439, 442, 446, 450, 455, 460, 465, 468, 473, 478, 480, 484, 486, 488, 493, 496, 500, 504, 508, 513, 518, 520, 524, 529, 533, 536, 539, 544, 548, 552, 556, 560, 562, 567, 570, 573, 576, 579, 582, 587, 591, 596, 601, 603, 605, 607, 611, 616, 621, 625, 628, 633, 637, 641, 645, 648, 653, 656, 658, 662, 664, 666, 669}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-240, -235, -233, -229, -226, -222, -218, -216, -212, -210, -208, -203, -201, -199, -194, -189, -184, -179, -175, -171, -166, -162, -158, -154, -149, -145, -142, -140, -138, -133, -128, -123, -119, -114, -111, -106, -101, -97, -93, -88, -83, -79, -74, -72, -67, -64, -61, -59, -56, -52, -47, -44, -39, -37, -33, -30, -26, -21, -18, -13, -10, -7, -5, -1, 4, 9, 14, 16, 19, 21, 26, 30, 35, 38, 40, 43, 47, 49, 53, 55, 59, 63, 65, 67, 69, 71, 76, 80, 85, 88, 90, 92, 96, 98, 103, 107, 112, 115, 118, 123, 128, 131, 135, 137, 142, 146, 149, 153, 157, 161, 165, 167, 171, 174, 179, 184, 186, 190, 194, 196, 201, 203, 208, 210, 212, 217, 222, 225, 227, 231, 233, 235, 237, 241, 243, 245, 248, 251, 253, 255, 259, 263, 265, 267, 272, 275, 277, 280, 284, 287, 289, 292, 295, 300, 304, 307, 312, 317, 319, 323, 327, 332, 334, 339, 341, 345, 349, 351, 356, 360, 363, 366, 368, 371, 376, 378, 382, 384, 388, 392, 394, 398, 402, 405, 407, 409, 413, 416, 420, 424, 426, 428, 432, 437, 439, 441, 444, 447, 451, 456}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-453, -449, -446, -441, -436, -431, -426, -421, -419, -416, -414, -411, -409, -404, -402, -400, -395, -392, -387, -385, -380, -377, -374, -371, -369, -366, -362, -360, -357, -354, -352, -350, -348, -343, -339, -337, -332, -328, -324, -322, -318, -314, -309, -304, -301, -297, -294, -290, -285, -282, -278, -275, -271, -269, -267, -262, -258, -253, -251, -246, -242, -239, -234, -232, -228, -225, -222, -217, -212, -207, -202, -200, -196, -193, -188, -185, -180, -178, -174, -172, -168, -165, -162, -160, -157, -153, -150, -146, -141, -137, -135, -131, -129, -124, -121, -119, -116, -112, -109, -104, -99, -94, -91, -87, -85, -80, -75, -72, -68, -63, -60, -57, -53, -49, -46, -42, -37, -32, -28, -24, -20, -17, -15, -10, -8, -4, 1, 4, 8, 13, 16, 19, 23, 25, 28, 33, 36, 40, 44, 46, 50, 55, 60, 65, 67, 70, 75, 78, 81, 83, 88, 92, 94, 98, 103, 105, 107, 111, 114, 119, 122, 127, 131, 134, 138, 140, 142, 147, 149, 154, 156, 161, 163, 166, 169, 174, 176, 178, 180, 185, 187, 189, 192, 196, 198, 201, 204, 209, 212, 215, 217, 220, 222, 226, 230, 232, 236, 238, 243, 245}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-75, -72, -67, -62, -60, -58, -53, -51, -46, -41, -39, -36, -32, -30, -26, -22, -18, -14, -9, -4, 1, 6, 8, 13, 16, 21, 25, 28, 29, 33, 38, 42, 45, 49, 53, 55, 59, 64, 66, 70, 72, 76, 78, 80, 84, 88, 93, 97, 102, 105, 109, 114, 117, 122, 127, 129, 132, 135, 138, 143, 145, 147, 151, 153, 157, 160, 164, 166, 170, 175, 177, 182, 184, 187, 191, 196, 199, 204, 209, 212, 217, 221, 223, 226, 230, 235, 238, 240, 242, 244, 249, 253, 255, 259, 264, 268, 271, 275, 279, 283, 288, 291, 296, 301, 305, 309, 312, 317, 320, 322, 326, 328, 330, 334, 338, 341, 344, 346, 348, 350, 353, 357, 362, 366, 369, 373, 376, 381, 385, 388, 392, 395, 397, 400, 404, 409, 414, 419, 423, 427, 432, 436, 440, 444, 449, 453, 458, 460, 465, 467, 470, 473, 478, 481, 486, 489, 492, 495, 499, 502, 504, 506, 510, 513, 515, 518, 522, 525, 530, 532, 535, 539, 542, 545, 547, 551, 553, 557, 559, 564, 568, 573, 576, 579, 582, 586, 590, 594, 596, 598, 600, 604, 607, 609, 614, 616, 619, 623, 627, 630}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-169, -167, -165, -162, -158, -153, -150, -145, -143, -138, -134, -131, -129, -124, -121, -118, -115, -110, -105, -102, -100, -95, -92, -88, -86, -82, -77, -72, -68, -65, -62, -60, -56, -52, -50, -46, -43, -41, -38, -33, -28, -26, -24, -22, -19, -14, -10, -6, -2, 0, 5, 9, 11, 13, 15, 18, 20, 23, 27, 29, 34, 38, 40, 45, 47, 51, 56, 60, 64, 67, 69, 72, 73, 77, 81, 85, 87, 91, 94, 99, 101, 104, 109, 111, 114, 116, 121, 123, 127, 130, 132, 137, 141, 145, 148, 150, 155, 160, 164, 168, 171, 176, 180, 184, 189, 194, 199, 204, 208, 213, 215, 218, 222, 227, 231, 234, 238, 241, 243, 245, 250, 253, 256, 258, 262, 264, 266, 268, 273, 275, 277, 279, 282, 285, 287, 292, 296, 300, 304, 307, 309, 311, 313, 317, 320, 322, 324, 328, 333, 338, 341, 344, 346, 349, 351, 353, 358, 361, 364, 366, 369, 371, 375, 377, 379, 381, 386, 388, 393, 397, 400, 402, 407, 410, 415, 417, 422, 427, 431, 436, 438, 443, 445, 450, 453, 458, 461, 464, 469, 474, 477, 481, 485, 488, 493, 498, 502, 505, 509, 512}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-116, -112, -107, -104, -102, -99, -96, -94, -89, -86, -84, -81, -79, -77, -75, -70, -66, -64, -60, -58, -55, -50, -48, -44, -40, -36, -31, -26, -22, -20, -17, -14, -10, -8, -6, -4, -2, 3, 8, 12, 16, 18, 21, 23, 28, 33, 36, 38, 43, 47, 49, 51, 53, 57, 59, 61, 66, 70, 75, 78, 81, 85, 88, 90, 93, 97, 100, 105, 110, 114, 119, 122, 126, 130, 132, 136, 141, 144, 149, 154, 158, 161, 163, 165, 170, 172, 174, 179, 181, 185, 187, 190, 193, 196, 199, 203, 207, 211, 215, 219, 221, 223, 228, 231, 235, 237, 239, 243, 247, 250, 252, 255, 258, 262, 266, 271, 275, 277, 279, 284, 289, 291, 296, 301, 306, 309, 314, 319, 323, 326, 329, 334, 338, 340, 345, 347, 352, 357, 359, 363, 366, 370, 375, 380, 384, 386, 388, 393, 395, 397, 401, 405, 409, 413, 415, 419, 423, 427, 430, 435, 438, 442, 447, 452, 457, 459, 463, 466, 470, 475, 479, 482, 485, 489, 491, 494, 499, 504, 506, 511, 513, 518, 523, 525, 527, 529, 531, 533, 537, 541, 544, 546, 549, 552, 556, 560, 564, 567, 569, 572}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-119, -116, -111, -108, -103, -100, -95, -93, -90, -88, -83, -78, -76, -71, -69, -67, -63, -58, -53, -50, -47, -44, -39, -35, -30, -25, -21, -17, -14, -9, -4, -2, 2, 7, 11, 13, 17, 22, 24, 26, 28, 31, 36, 41, 43, 46, 47, 51, 55, 59, 63, 68, 72, 77, 81, 85, 90, 94, 98, 100, 103, 108, 113, 118, 123, 125, 129, 133, 136, 141, 144, 146, 148, 152, 157, 160, 164, 168, 171, 176, 178, 183, 187, 192, 195, 198, 202, 207, 211, 213, 215, 219, 221, 224, 227, 232, 237, 239, 241, 244, 246, 248, 253, 256, 261, 264, 268, 270, 275, 278, 283, 285, 288, 292, 297, 299, 303, 308, 312, 316, 319, 322, 325, 328, 333, 336, 340, 343, 347, 350, 354, 356, 358, 363, 368, 371, 373, 378, 382, 384, 386, 390, 394, 397, 400, 404, 406, 410, 413, 415, 419, 421, 425, 428, 431, 433, 437, 441, 445, 449, 451, 455, 459, 461, 463, 465, 467, 472, 475, 479, 484, 487, 492, 495, 499, 501, 504, 506, 510, 515, 520, 523, 525, 530, 532, 535, 537, 542, 545, 549, 551, 555, 557, 561, 565, 570, 572, 574, 578, 582}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-218, -214, -210, -208, -203, -200, -196, -191, -187, -182, -180, -176, -172, -167, -165, -160, -157, -154, -150, -147, -143, -141, -136, -134, -131, -127, -125, -121, -119, -117, -112, -107, -103, -98, -96, -93, -89, -85, -81, -79, -76, -71, -66, -63, -58, -56, -53, -48, -43, -38, -34, -31, -28, -25, -21, -16, -12, -9, -6, -1, 3, 5, 7, 10, 13, 18, 20, 22, 25, 29, 34, 36, 41, 46, 51, 55, 57, 62, 66, 69, 72, 77, 80, 82, 85, 86, 88, 92, 95, 97, 102, 106, 111, 116, 121, 123, 128, 133, 138, 141, 145, 150, 152, 154, 156, 159, 163, 166, 168, 172, 176, 179, 182, 184, 187, 190, 192, 197, 200, 202, 207, 209, 212, 214, 219, 221, 226, 231, 234, 238, 243, 246, 249, 253, 255, 260, 264, 267, 270, 273, 277, 279, 281, 286, 289, 292, 294, 298, 303, 305, 307, 309, 311, 313, 315, 318, 323, 326, 331, 333, 335, 337, 342, 346, 350, 353, 357, 359, 362, 365, 370, 374, 376, 381, 385, 389, 393, 397, 400, 403, 408, 410, 414, 418, 420, 425, 428, 430, 432, 437, 441, 445, 450, 453, 458, 462, 465, 469, 474, 479}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-286, -282, -280, -278, -276, -274, -270, -267, -264, -262, -260, -256, -254, -251, -248, -245, -242, -237, -235, -231, -226, -223, -221, -218, -214, -209, -204, -202, -198, -196, -194, -190, -185, -180, -175, -171, -166, -161, -158, -156, -151, -149, -144, -140, -135, -130, -126, -123, -118, -116, -111, -107, -105, -103, -98, -95, -92, -88, -84, -79, -76, -74, -69, -67, -62, -60, -57, -55, -52, -47, -45, -40, -38, -36, -32, -29, -26, -24, -20, -15, -13, -11, -9, -7, -2, 3, 6, 11, 13, 15, 18, 20, 24, 28, 33, 37, 41, 44, 47, 50, 53, 56, 60, 62, 66, 70, 73, 76, 81, 84, 87, 92, 97, 100, 102, 104, 107, 109, 113, 118, 119, 122, 124, 126, 129, 132, 137, 139, 142, 144, 147, 149, 152, 157, 162, 165, 168, 173, 178, 182, 184, 186, 189, 191, 194, 198, 201, 206, 210, 213, 217, 221, 226, 229, 231, 236, 238, 243, 248, 251, 256, 259, 263, 266, 270, 273, 278, 282, 286, 290, 292, 296, 300, 305, 310, 313, 317, 322, 326, 328, 331, 333, 335, 337, 339, 344, 348, 350, 355, 360, 365, 370, 373, 376, 378, 380, 385, 388, 392, 396}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-170, -165, -163, -158, -156, -153, -151, -146, -141, -139, -135, -131, -129, -124, -122, -117, -112, -109, -107, -103, -101, -98, -93, -91, -87, -82, -77, -75, -72, -67, -64, -59, -54, -51, -46, -41, -37, -34, -32, -27, -23, -18, -16, -14, -9, -7, -4, -1, 1, 3, 7, 10, 14, 16, 21, 23, 26, 31, 36, 41, 44, 46, 50, 55, 57, 60, 62, 66, 67, 70, 74, 79, 82, 85, 87, 92, 95, 97, 100, 104, 108, 113, 117, 121, 123, 125, 130, 132, 134, 137, 142, 146, 149, 153, 157, 161, 163, 168, 172, 176, 181, 183, 185, 190, 193, 195, 199, 202, 207, 212, 216, 219, 224, 227, 232, 234, 239, 242, 246, 251, 253, 257, 262, 265, 267, 269, 272, 275, 280, 282, 286, 288, 293, 298, 300, 304, 308, 312, 314, 316, 320, 324, 326, 330, 335, 339, 342, 346, 349, 351, 356, 360, 364, 367, 369, 373, 377, 380, 384, 388, 390, 392, 394, 396, 401, 406, 409, 411, 413, 417, 422, 426, 429, 433, 435, 437, 442, 447, 451, 453, 458, 462, 464, 468, 472, 477, 480, 482, 487, 489, 492, 497, 500, 502, 504, 507, 512, 517, 522, 525}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-5, 0, 2, 4, 9, 11, 15, 20, 22, 25, 30, 32, 34, 38, 41, 45, 47, 52, 56, 61, 63, 66, 69, 73, 78, 81, 85, 88, 92, 94, 99, 102, 104, 107, 111, 115, 119, 121, 126, 129, 131, 134, 136, 141, 144, 148, 151, 153, 157, 160, 162, 166, 168, 170, 174, 176, 178, 180, 185, 187, 191, 194, 197, 200, 204, 207, 209, 213, 216, 219, 222, 224, 226, 229, 233, 238, 242, 245, 250, 254, 258, 263, 267, 270, 273, 275, 278, 283, 288, 291, 293, 298, 302, 307, 309, 314, 316, 319, 321, 325, 329, 334, 336, 340, 344, 346, 349, 352, 355, 359, 364, 369, 374, 376, 378, 382, 386, 388, 392, 394, 398, 401, 405, 409, 413, 415, 420, 423, 426, 430, 433, 435, 438, 443, 445, 449, 454, 458, 460, 462, 465, 468, 472, 475, 480, 482, 486, 490, 495, 499, 501, 506, 509, 513, 518, 520, 524, 529, 531, 534, 537, 542, 547, 552, 554, 558, 562, 567, 571, 573, 577, 582, 584, 587, 589, 594, 597, 601, 604, 607, 612, 617, 621, 623, 625, 628, 631, 635, 640, 645, 650, 652, 657, 660, 665, 669, 672, 675, 679, 684}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-314, -310, -307, -303, -301, -296, -294, -291, -287, -284, -281, -277, -273, -270, -266, -263, -259, -255, -252, -248, -245, -240, -236, -232, -229, -224, -220, -217, -215, -211, -208, -204, -200, -198, -196, -193, -190, -187, -184, -181, -178, -173, -170, -167, -165, -161, -157, -153, -149, -146, -144, -141, -139, -135, -132, -129, -126, -123, -118, -116, -113, -108, -103, -100, -98, -93, -89, -87, -84, -82, -78, -73, -69, -64, -62, -59, -55, -53, -50, -47, -44, -41, -38, -34, -29, -27, -25, -23, -19, -14, -10, -8, -6, -4, -1, 2, 4, 7, 11, 13, 15, 18, 23, 26, 30, 32, 36, 41, 43, 48, 52, 56, 61, 65, 69, 71, 73, 76, 80, 83, 85, 88, 90, 92, 96, 101, 106, 108, 112, 117, 122, 126, 131, 132, 135, 139, 144, 147, 150, 153, 156, 158, 160, 163, 166, 171, 175, 180, 182, 184, 187, 192, 197, 201, 203, 205, 208, 212, 215, 218, 220, 223, 228, 230, 232, 237, 239, 243, 248, 251, 254, 258, 260, 262, 264, 268, 273, 277, 280, 285, 288, 292, 295, 298, 303, 308, 312, 314, 317, 319, 322, 324, 327, 332, 337, 339, 343, 345, 347, 349}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-360, -357, -353, -348, -345, -342, -340, -336, -332, -328, -323, -319, -316, -314, -310, -306, -301, -299, -294, -291, -289, -284, -280, -276, -274, -270, -268, -266, -263, -258, -256, -251, -249, -244, -239, -237, -233, -229, -227, -224, -221, -219, -216, -213, -210, -206, -204, -199, -196, -191, -188, -183, -178, -173, -168, -164, -159, -155, -150, -146, -141, -138, -133, -129, -126, -122, -118, -116, -111, -107, -103, -98, -95, -90, -86, -81, -76, -73, -68, -66, -63, -58, -53, -50, -47, -45, -41, -39, -37, -34, -32, -27, -25, -20, -15, -11, -8, -5, 0, 5, 8, 13, 18, 20, 25, 30, 34, 38, 41, 46, 48, 50, 54, 58, 60, 62, 65, 68, 73, 75, 77, 79, 81, 85, 89, 93, 97, 100, 103, 107, 111, 114, 118, 121, 124, 128, 132, 136, 137, 140, 145, 147, 151, 155, 159, 164, 167, 171, 176, 180, 182, 185, 190, 193, 198, 201, 203, 208, 211, 216, 218, 223, 228, 231, 236, 241, 245, 249, 253, 256, 258, 260, 263, 265, 268, 273, 278, 283, 288, 293, 298, 301, 304, 307, 309, 311, 315, 318, 323, 328, 333, 338, 342, 345, 350, 352, 355, 358, 361, 366}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-102, -100, -96, -91, -88, -86, -83, -78, -74, -72, -69, -67, -65, -61, -57, -55, -50, -48, -43, -38, -36, -34, -32, -29, -25, -20, -15, -13, -9, -6, -4, 0, 4, 6, 9, 14, 16, 20, 22, 24, 28, 33, 36, 40, 43, 45, 47, 49, 53, 56, 61, 64, 68, 73, 75, 78, 80, 83, 87, 89, 94, 98, 100, 104, 108, 110, 114, 118, 121, 126, 131, 134, 139, 141, 143, 145, 149, 152, 157, 162, 164, 169, 173, 175, 178, 181, 186, 190, 193, 195, 197, 200, 203, 206, 209, 214, 219, 223, 226, 231, 234, 236, 239, 243, 246, 248, 250, 252, 254, 257, 262, 266, 268, 272, 276, 279, 284, 288, 290, 294, 299, 304, 306, 308, 312, 314, 319, 323, 328, 331, 336, 341, 346, 351, 354, 359, 363, 365, 369, 371, 374, 379, 381, 383, 386, 390, 392, 396, 400, 403, 408, 413, 418, 423, 426, 431, 435, 440, 445, 447, 451, 454, 456, 458, 463, 467, 470, 473, 476, 481, 484, 488, 490, 494, 497, 501, 503, 505, 507, 510, 512, 514, 517, 519, 522, 524, 528, 533, 537, 541, 545, 549, 551, 554, 557, 561, 566, 569, 574, 577}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-111, -108, -106, -104, -101, -99, -94, -89, -87, -83, -78, -74, -72, -67, -63, -60, -56, -51, -49, -46, -41, -37, -35, -31, -29, -25, -20, -15, -12, -9, -4, 1, 3, 5, 8, 11, 15, 18, 21, 23, 26, 31, 36, 38, 41, 44, 46, 48, 51, 53, 55, 58, 62, 66, 70, 73, 76, 78, 81, 84, 89, 91, 93, 95, 98, 102, 104, 109, 112, 117, 121, 125, 129, 133, 135, 138, 143, 147, 151, 155, 158, 161, 166, 168, 173, 176, 178, 181, 185, 188, 191, 196, 198, 202, 204, 209, 214, 218, 222, 227, 231, 234, 236, 238, 243, 247, 251, 256, 261, 263, 267, 272, 276, 279, 281, 286, 291, 294, 298, 301, 306, 309, 313, 317, 320, 323, 328, 333, 338, 343, 346, 348, 353, 357, 359, 361, 364, 366, 368, 373, 376, 380, 383, 387, 389, 391, 395, 398, 401, 404, 408, 413, 416, 419, 421, 423, 426, 431, 433, 437, 441, 445, 449, 454, 459, 463, 465, 467, 471, 473, 478, 481, 485, 488, 493, 497, 501, 505, 508, 512, 514, 518, 521, 523, 525, 530, 532, 536, 539, 543, 546, 548, 552, 556, 561, 564, 566, 568, 570, 574}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-173, -170, -165, -161, -157, -153, -151, -147, -143, -140, -137, -134, -129, -127, -122, -119, -114, -112, -109, -107, -105, -100, -96, -93, -89, -87, -84, -82, -78, -73, -68, -65, -60, -55, -51, -47, -42, -40, -36, -31, -28, -26, -21, -16, -12, -9, -7, -5, -3, 1, 5, 9, 12, 17, 20, 22, 25, 27, 32, 35, 39, 41, 45, 48, 53, 56, 59, 63, 67, 70, 71, 73, 76, 78, 82, 85, 90, 95, 99, 104, 107, 110, 114, 119, 122, 124, 129, 131, 133, 136, 140, 145, 147, 152, 156, 161, 163, 167, 170, 173, 176, 179, 183, 188, 190, 194, 198, 203, 207, 212, 216, 218, 221, 223, 226, 228, 230, 235, 239, 241, 244, 247, 249, 254, 258, 261, 266, 271, 273, 275, 278, 280, 283, 288, 292, 295, 299, 302, 305, 310, 312, 314, 319, 324, 326, 328, 331, 333, 337, 341, 343, 346, 348, 353, 356, 358, 362, 367, 369, 374, 376, 379, 384, 388, 390, 392, 394, 398, 402, 405, 409, 411, 414, 419, 423, 427, 429, 433, 436, 441, 446, 451, 456, 458, 460, 465, 468, 473, 475, 477, 481, 483, 487, 491, 495, 497, 500, 505, 508, 512}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-353, -349, -347, -344, -341, -337, -332, -327, -324, -322, -317, -312, -310, -306, -301, -296, -291, -287, -284, -279, -277, -273, -268, -264, -260, -257, -252, -248, -244, -241, -238, -236, -232, -229, -224, -220, -215, -211, -209, -207, -203, -198, -193, -189, -186, -184, -179, -176, -172, -168, -164, -161, -157, -154, -149, -146, -141, -139, -134, -132, -130, -125, -121, -116, -113, -108, -103, -99, -97, -95, -90, -87, -83, -79, -76, -74, -70, -68, -65, -63, -59, -55, -53, -51, -46, -44, -39, -34, -29, -27, -24, -22, -17, -14, -9, -4, -2, 1, 3, 6, 8, 11, 16, 19, 22, 24, 29, 33, 37, 39, 43, 45, 47, 52, 57, 62, 64, 68, 70, 75, 80, 85, 88, 92, 97, 100, 103, 107, 110, 115, 119, 122, 124, 129, 133, 135, 137, 140, 145, 147, 152, 154, 158, 163, 165, 168, 173, 175, 178, 180, 182, 184, 186, 189, 191, 195, 197, 201, 206, 208, 213, 218, 222, 227, 232, 235, 240, 243, 247, 251, 254, 259, 261, 263, 267, 271, 275, 279, 283, 288, 292, 296, 301, 306, 311, 313, 316, 320, 324, 327, 332, 335, 340, 344, 349, 353, 355, 357, 361, 364}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-282, -277, -272, -267, -264, -261, -259, -256, -251, -249, -244, -242, -238, -234, -229, -224, -222, -220, -215, -210, -205, -201, -196, -194, -190, -187, -185, -180, -176, -171, -168, -163, -161, -159, -157, -152, -150, -147, -145, -142, -138, -135, -133, -129, -125, -121, -117, -112, -108, -105, -101, -98, -93, -91, -86, -81, -79, -77, -75, -73, -71, -66, -64, -62, -60, -58, -55, -51, -46, -42, -39, -35, -32, -30, -25, -20, -17, -12, -9, -5, -2, 3, 5, 10, 12, 14, 16, 20, 23, 25, 29, 34, 36, 38, 40, 43, 46, 48, 51, 53, 55, 57, 61, 65, 69, 73, 78, 83, 87, 91, 95, 99, 103, 105, 109, 111, 113, 116, 118, 120, 124, 127, 130, 133, 138, 141, 146, 148, 153, 157, 159, 163, 166, 170, 174, 179, 183, 188, 191, 194, 198, 201, 205, 207, 209, 212, 216, 218, 220, 222, 226, 230, 235, 238, 242, 244, 249, 253, 256, 261, 266, 268, 272, 276, 278, 281, 285, 290, 292, 296, 301, 305, 310, 313, 315, 319, 321, 326, 330, 333, 335, 340, 345, 347, 350, 352, 356, 361, 366, 371, 375, 380, 385, 387, 392, 395, 398, 401, 403, 406}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-420, -415, -410, -405, -400, -398, -396, -391, -388, -383, -381, -377, -374, -371, -367, -364, -360, -355, -352, -348, -343, -339, -336, -332, -327, -325, -322, -320, -316, -314, -310, -308, -304, -301, -297, -292, -289, -284, -282, -279, -275, -271, -266, -262, -259, -255, -252, -248, -246, -244, -239, -235, -230, -226, -224, -221, -219, -216, -212, -207, -203, -201, -198, -195, -192, -188, -183, -181, -177, -173, -168, -164, -159, -157, -153, -150, -148, -146, -143, -141, -137, -134, -130, -127, -124, -121, -118, -114, -110, -105, -101, -96, -92, -88, -86, -81, -78, -73, -70, -65, -61, -56, -51, -46, -43, -41, -38, -35, -31, -29, -26, -24, -21, -19, -14, -11, -6, -2, 0, 4, 7, 10, 14, 19, 22, 25, 27, 30, 35, 37, 40, 42, 47, 50, 55, 60, 62, 67, 70, 72, 75, 77, 81, 83, 87, 91, 94, 99, 104, 108, 110, 114, 116, 118, 121, 125, 130, 133, 135, 140, 142, 144, 147, 151, 156, 158, 161, 165, 167, 169, 171, 175, 177, 182, 186, 188, 192, 196, 200, 204, 207, 211, 213, 218, 223, 228, 232, 237, 242, 246, 248, 251, 254, 258, 260, 263, 266, 268, 270, 275}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-362, -359, -357, -354, -351, -349, -346, -343, -338, -335, -331, -328, -326, -321, -319, -317, -313, -309, -306, -301, -296, -291, -287, -282, -278, -275, -271, -266, -261, -259, -255, -251, -247, -245, -240, -238, -236, -234, -230, -226, -223, -219, -216, -214, -211, -208, -205, -200, -196, -191, -188, -185, -183, -179, -174, -172, -168, -165, -163, -160, -158, -155, -151, -146, -141, -139, -135, -130, -126, -124, -122, -120, -116, -113, -111, -106, -102, -98, -95, -91, -89, -84, -81, -76, -72, -68, -63, -60, -57, -54, -52, -47, -44, -39, -37, -34, -30, -25, -21, -19, -14, -11, -8, -4, 1, 4, 7, 12, 14, 16, 20, 24, 26, 31, 34, 39, 42, 44, 47, 51, 55, 57, 61, 63, 67, 70, 73, 76, 80, 84, 87, 90, 92, 97, 102, 107, 109, 111, 116, 121, 124, 128, 132, 136, 138, 143, 145, 146, 149, 153, 156, 161, 163, 165, 169, 173, 178, 181, 183, 188, 190, 195, 197, 199, 203, 205, 207, 210, 212, 215, 217, 222, 226, 230, 234, 237, 242, 246, 250, 252, 255, 260, 263, 265, 268, 273, 275, 278, 281, 283, 287, 291, 295, 298, 301, 305, 307, 309, 311, 313}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-8, -4, -1, 2, 4, 6, 9, 12, 17, 22, 27, 31, 33, 35, 39, 43, 46, 49, 54, 57, 62, 65, 68, 73, 78, 82, 86, 90, 92, 96, 100, 103, 105, 108, 112, 114, 116, 120, 124, 126, 129, 134, 138, 140, 145, 150, 154, 156, 161, 165, 169, 173, 176, 179, 181, 183, 186, 189, 193, 196, 198, 202, 204, 206, 209, 213, 216, 218, 223, 225, 228, 230, 233, 237, 241, 244, 249, 251, 253, 255, 258, 261, 266, 269, 273, 277, 282, 286, 289, 294, 296, 299, 304, 307, 309, 312, 317, 319, 323, 327, 332, 334, 339, 341, 345, 349, 352, 357, 359, 363, 365, 370, 374, 379, 384, 386, 390, 392, 395, 400, 404, 407, 410, 413, 417, 420, 422, 427, 430, 435, 439, 442, 446, 449, 451, 453, 457, 461, 464, 466, 470, 473, 478, 482, 487, 491, 493, 495, 500, 503, 507, 512, 515, 517, 522, 524, 526, 530, 535, 538, 541, 546, 549, 552, 555, 558, 563, 567, 571, 575, 579, 583, 588, 590, 593, 598, 600, 605, 608, 613, 615, 619, 621, 624, 627, 632, 634, 636, 638, 643, 646, 648, 652, 657, 660, 663, 665, 667, 670, 673}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-350, -345, -341, -338, -335, -331, -327, -323, -319, -317, -315, -313, -309, -306, -302, -299, -296, -292, -289, -286, -282, -279, -277, -272, -270, -267, -262, -260, -257, -253, -248, -245, -240, -238, -234, -230, -226, -222, -217, -213, -210, -208, -205, -201, -197, -193, -189, -185, -180, -177, -175, -172, -167, -163, -158, -155, -153, -149, -145, -141, -138, -136, -132, -129, -125, -120, -115, -113, -111, -108, -104, -100, -96, -93, -91, -89, -86, -84, -82, -80, -76, -73, -70, -65, -60, -56, -51, -49, -45, -40, -36, -33, -31, -27, -25, -22, -17, -13, -10, -6, -2, 2, 5, 10, 12, 15, 20, 25, 27, 30, 35, 37, 40, 44, 46, 50, 52, 56, 61, 65, 70, 75, 78, 82, 84, 88, 92, 95, 99, 103, 107, 111, 114, 118, 121, 124, 128, 132, 137, 138, 141, 143, 146, 149, 152, 156, 160, 164, 167, 170, 172, 177, 182, 186, 189, 192, 197, 200, 204, 208, 212, 216, 219, 221, 224, 227, 230, 235, 237, 240, 245, 249, 252, 257, 260, 265, 270, 275, 280, 282, 287, 289, 292, 295, 299, 301, 305, 307, 310, 313, 317, 322, 324, 329, 332, 336, 340, 342, 344, 347}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-137, -134, -130, -126, -122, -118, -116, -114, -109, -106, -102, -97, -94, -92, -89, -87, -84, -80, -77, -75, -70, -65, -60, -58, -54, -51, -46, -43, -41, -37, -33, -30, -28, -25, -23, -18, -13, -9, -6, -3, 2, 5, 8, 10, 13, 17, 20, 25, 29, 33, 37, 40, 45, 48, 50, 54, 55, 58, 60, 65, 70, 74, 77, 80, 84, 86, 88, 91, 94, 99, 102, 106, 109, 113, 115, 117, 122, 127, 129, 132, 135, 139, 141, 143, 148, 153, 158, 162, 165, 167, 172, 175, 178, 183, 185, 188, 190, 195, 199, 204, 206, 210, 213, 216, 219, 221, 226, 228, 230, 233, 238, 242, 244, 248, 251, 255, 258, 260, 264, 266, 270, 274, 278, 282, 285, 287, 291, 295, 297, 301, 303, 307, 310, 315, 318, 322, 326, 330, 333, 337, 342, 346, 349, 351, 353, 357, 362, 365, 368, 371, 375, 379, 381, 383, 387, 390, 392, 396, 399, 401, 403, 407, 411, 413, 417, 422, 427, 432, 437, 442, 447, 449, 451, 455, 459, 461, 465, 470, 473, 477, 480, 483, 488, 490, 492, 496, 501, 503, 505, 510, 515, 517, 522, 526, 528, 531, 535, 540, 542, 546}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-277, -272, -268, -266, -261, -257, -254, -250, -246, -241, -239, -236, -232, -230, -227, -222, -217, -213, -210, -207, -205, -203, -198, -196, -191, -189, -186, -184, -181, -177, -175, -172, -168, -164, -162, -158, -156, -153, -150, -145, -141, -137, -134, -132, -130, -127, -124, -119, -117, -113, -109, -104, -99, -94, -89, -86, -83, -80, -78, -76, -74, -70, -67, -64, -62, -59, -54, -52, -48, -43, -38, -34, -30, -28, -24, -21, -17, -13, -9, -6, -2, 0, 2, 4, 8, 12, 15, 19, 22, 26, 30, 32, 35, 37, 42, 47, 52, 55, 60, 64, 68, 72, 74, 78, 81, 84, 87, 91, 93, 98, 100, 105, 110, 112, 115, 116, 119, 123, 125, 130, 134, 139, 141, 143, 147, 152, 156, 159, 164, 168, 170, 174, 176, 181, 185, 188, 193, 196, 201, 204, 207, 210, 215, 217, 219, 222, 226, 230, 235, 240, 242, 246, 248, 253, 255, 259, 262, 267, 272, 277, 279, 281, 286, 290, 293, 295, 300, 305, 308, 310, 314, 319, 322, 327, 329, 331, 334, 337, 340, 345, 347, 351, 353, 356, 358, 362, 367, 372, 375, 379, 384, 386, 389, 394, 398, 403, 407, 409, 413, 417}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{0, 2, 6, 11, 15, 20, 24, 29, 32, 37, 40, 42, 45, 47, 49, 52, 56, 59, 61, 64, 68, 71, 74, 78, 82, 87, 92, 94, 98, 102, 107, 109, 111, 116, 121, 124, 129, 131, 133, 136, 141, 143, 147, 152, 154, 157, 159, 164, 169, 174, 178, 182, 185, 190, 193, 195, 198, 200, 205, 208, 211, 213, 218, 223, 228, 232, 237, 239, 243, 246, 249, 252, 256, 258, 260, 265, 269, 272, 275, 279, 283, 285, 287, 290, 294, 298, 302, 307, 309, 311, 315, 317, 321, 324, 329, 331, 334, 339, 341, 344, 346, 349, 351, 356, 360, 363, 365, 368, 373, 378, 381, 384, 388, 391, 394, 396, 399, 403, 405, 410, 415, 417, 422, 424, 429, 431, 434, 437, 441, 445, 449, 451, 456, 461, 464, 466, 471, 474, 476, 479, 484, 488, 491, 495, 500, 502, 506, 509, 512, 514, 519, 522, 527, 531, 536, 540, 544, 547, 549, 554, 557, 562, 567, 571, 574, 577, 581, 586, 591, 593, 597, 599, 601, 604, 606, 609, 612, 614, 619, 624, 629, 631, 633, 637, 640, 644, 649, 653, 657, 661, 666, 669, 673, 675, 677, 681, 686, 689, 693, 698}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-277, -273, -268, -264, -261, -257, -254, -251, -246, -244, -239, -235, -232, -229, -225, -220, -215, -210, -207, -205, -202, -198, -193, -191, -189, -187, -183, -179, -177, -172, -168, -165, -160, -155, -150, -146, -144, -140, -137, -134, -130, -126, -123, -120, -118, -113, -110, -105, -103, -98, -93, -88, -84, -79, -74, -71, -66, -64, -61, -58, -53, -48, -46, -43, -41, -39, -34, -30, -26, -24, -19, -14, -11, -7, -5, -2, 0, 3, 7, 11, 15, 18, 22, 26, 30, 32, 36, 40, 42, 47, 52, 54, 56, 61, 66, 68, 72, 74, 76, 80, 83, 88, 93, 97, 101, 103, 105, 107, 109, 112, 114, 116, 118, 121, 125, 129, 132, 134, 137, 142, 147, 150, 154, 156, 159, 163, 166, 171, 173, 178, 181, 184, 188, 193, 196, 199, 202, 204, 206, 209, 213, 217, 222, 225, 230, 234, 239, 243, 246, 249, 253, 257, 260, 262, 267, 270, 272, 276, 278, 280, 284, 287, 289, 292, 296, 299, 304, 308, 313, 317, 321, 324, 328, 331, 334, 337, 342, 345, 350, 353, 357, 360, 362, 364, 369, 371, 376, 380, 385, 388, 392, 397, 401, 403, 406, 409, 414, 419, 424, 428}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-375, -371, -368, -365, -363, -359, -354, -351, -348, -343, -339, -334, -330, -327, -322, -317, -315, -311, -307, -305, -301, -298, -296, -291, -288, -283, -278, -275, -273, -268, -264, -259, -255, -252, -248, -245, -243, -240, -237, -234, -231, -229, -224, -219, -215, -210, -206, -204, -199, -195, -191, -189, -186, -183, -178, -175, -173, -168, -166, -162, -159, -157, -154, -149, -146, -143, -141, -138, -133, -130, -127, -124, -122, -117, -113, -108, -105, -103, -99, -97, -92, -89, -85, -83, -81, -77, -75, -71, -66, -62, -59, -56, -52, -50, -48, -44, -40, -38, -33, -31, -28, -23, -20, -16, -13, -9, -7, -2, 3, 8, 13, 18, 20, 23, 26, 30, 33, 36, 40, 45, 47, 51, 55, 58, 60, 65, 70, 73, 77, 82, 84, 86, 89, 91, 94, 96, 98, 101, 106, 108, 110, 113, 115, 119, 121, 126, 129, 132, 135, 137, 140, 142, 146, 151, 153, 155, 157, 162, 164, 169, 172, 175, 178, 180, 184, 188, 193, 196, 201, 205, 209, 213, 215, 217, 222, 226, 229, 234, 236, 239, 243, 247, 251, 255, 260, 264, 266, 271, 276, 279, 282, 286, 290, 294, 298, 302, 304, 306, 310, 314}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-426, -423, -419, -415, -411, -409, -405, -402, -397, -392, -389, -384, -381, -378, -373, -369, -365, -361, -356, -353, -351, -348, -343, -339, -337, -332, -327, -323, -319, -314, -309, -307, -304, -300, -297, -295, -293, -291, -288, -285, -283, -280, -277, -272, -267, -263, -260, -255, -251, -248, -246, -243, -239, -234, -230, -228, -225, -223, -220, -215, -212, -209, -204, -199, -194, -191, -186, -183, -181, -177, -174, -169, -166, -161, -157, -154, -151, -148, -146, -144, -139, -134, -130, -125, -120, -115, -110, -108, -106, -102, -98, -93, -90, -87, -85, -81, -76, -71, -68, -66, -61, -56, -53, -51, -47, -42, -39, -35, -31, -28, -25, -20, -17, -12, -10, -8, -5, -3, 2, 4, 6, 8, 12, 17, 21, 26, 29, 31, 33, 36, 38, 43, 45, 49, 52, 55, 58, 63, 68, 70, 75, 80, 82, 87, 89, 94, 96, 99, 103, 107, 111, 116, 119, 123, 126, 130, 134, 138, 143, 148, 151, 153, 156, 160, 163, 165, 167, 172, 175, 179, 183, 188, 193, 196, 200, 205, 210, 215, 218, 220, 225, 229, 232, 235, 237, 241, 244, 249, 252, 255, 257, 262, 264, 267, 271, 274, 276, 281, 286, 288}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-35, -31, -29, -25, -21, -17, -14, -12, -9, -5, -1, 2, 6, 8, 11, 14, 15, 18, 23, 25, 30, 34, 38, 41, 46, 51, 55, 59, 62, 67, 71, 75, 79, 84, 87, 92, 97, 100, 105, 108, 113, 117, 121, 123, 128, 131, 133, 135, 138, 143, 147, 149, 154, 157, 162, 164, 166, 169, 171, 175, 177, 182, 186, 191, 194, 199, 204, 206, 210, 215, 217, 221, 226, 228, 230, 232, 236, 238, 241, 243, 246, 248, 250, 254, 259, 264, 269, 274, 278, 282, 286, 291, 295, 298, 302, 306, 308, 311, 314, 317, 319, 323, 325, 329, 332, 335, 337, 340, 344, 346, 351, 353, 358, 360, 364, 366, 368, 371, 376, 379, 383, 387, 391, 395, 399, 401, 403, 407, 409, 413, 415, 417, 420, 423, 425, 428, 431, 435, 438, 441, 443, 448, 452, 455, 457, 460, 465, 467, 469, 474, 479, 482, 487, 489, 491, 496, 501, 505, 510, 514, 516, 520, 522, 524, 527, 532, 536, 541, 545, 549, 554, 556, 561, 564, 567, 571, 576, 581, 583, 587, 589, 592, 594, 597, 600, 602, 607, 612, 616, 619, 624, 628, 631, 634, 636, 641, 646, 651, 654, 659}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-346, -343, -338, -335, -331, -328, -323, -319, -316, -312, -307, -304, -299, -297, -295, -291, -286, -281, -279, -274, -270, -268, -264, -260, -258, -254, -250, -245, -241, -237, -234, -232, -229, -225, -223, -221, -217, -214, -209, -206, -201, -197, -195, -192, -190, -188, -184, -180, -177, -175, -172, -168, -164, -162, -159, -156, -151, -147, -143, -141, -138, -133, -130, -127, -122, -117, -115, -111, -108, -106, -103, -101, -96, -92, -90, -87, -85, -81, -79, -75, -73, -70, -67, -63, -59, -56, -52, -48, -45, -43, -39, -34, -30, -28, -23, -21, -19, -15, -10, -6, -1, 4, 8, 13, 17, 19, 22, 26, 31, 33, 38, 42, 45, 48, 51, 56, 60, 63, 67, 70, 74, 77, 80, 84, 86, 89, 91, 93, 98, 102, 104, 106, 108, 112, 116, 121, 125, 130, 132, 137, 139, 141, 143, 148, 150, 152, 156, 160, 163, 167, 170, 174, 178, 180, 185, 188, 193, 197, 202, 205, 208, 211, 214, 219, 222, 224, 226, 228, 230, 234, 239, 241, 243, 247, 251, 255, 257, 260, 262, 267, 271, 275, 278, 282, 285, 288, 291, 295, 299, 304, 308, 312, 316, 320, 323, 328, 330, 334, 337, 340}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-233, -230, -228, -223, -221, -218, -215, -211, -206, -202, -197, -192, -187, -183, -180, -176, -171, -166, -161, -156, -152, -148, -146, -144, -139, -135, -131, -128, -124, -119, -116, -114, -110, -107, -104, -99, -94, -89, -84, -80, -75, -70, -65, -60, -57, -54, -51, -47, -44, -41, -38, -35, -33, -30, -27, -25, -21, -16, -13, -11, -9, -5, -1, 3, 8, 10, 13, 17, 21, 25, 30, 33, 35, 37, 39, 41, 43, 47, 52, 55, 60, 64, 66, 70, 72, 77, 80, 83, 87, 88, 91, 93, 95, 99, 103, 106, 108, 111, 115, 119, 124, 129, 134, 138, 140, 142, 147, 149, 154, 157, 162, 167, 169, 171, 173, 178, 183, 185, 188, 191, 196, 200, 202, 207, 209, 211, 214, 216, 221, 224, 228, 233, 238, 241, 246, 251, 253, 256, 261, 266, 271, 275, 279, 282, 285, 288, 290, 292, 297, 302, 306, 308, 311, 315, 320, 324, 328, 330, 335, 338, 341, 344, 347, 351, 354, 356, 361, 366, 369, 374, 378, 382, 384, 387, 390, 395, 400, 404, 409, 413, 417, 420, 422, 425, 428, 432, 436, 441, 446, 451, 455, 459, 462, 464, 469, 473, 477, 481, 484, 489}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-113, -109, -106, -101, -96, -94, -92, -89, -85, -82, -77, -74, -72, -70, -67, -62, -59, -54, -51, -49, -47, -45, -41, -36, -33, -28, -25, -23, -18, -13, -10, -7, -4, 0, 2, 7, 11, 14, 18, 23, 27, 32, 37, 42, 43, 46, 49, 52, 55, 58, 62, 67, 72, 74, 77, 79, 81, 85, 90, 95, 97, 102, 107, 109, 111, 116, 119, 123, 128, 133, 137, 140, 143, 148, 150, 155, 157, 161, 165, 168, 172, 174, 178, 183, 188, 193, 196, 200, 204, 206, 211, 214, 219, 224, 226, 231, 234, 238, 243, 248, 252, 257, 261, 263, 267, 269, 273, 276, 278, 280, 283, 286, 290, 294, 297, 302, 305, 309, 314, 319, 323, 328, 333, 336, 341, 343, 345, 349, 352, 354, 358, 361, 363, 365, 368, 373, 375, 379, 383, 385, 388, 391, 395, 398, 403, 408, 410, 415, 418, 422, 426, 430, 435, 440, 443, 448, 453, 455, 459, 461, 466, 469, 473, 477, 480, 483, 488, 491, 495, 499, 501, 506, 511, 515, 519, 524, 529, 533, 538, 542, 544, 548, 550, 554, 556, 558, 563, 566, 568, 570, 572, 574, 576, 580, 582, 585, 590, 594, 597, 600}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-334, -330, -326, -324, -321, -318, -313, -308, -306, -304, -300, -296, -294, -289, -284, -279, -275, -272, -267, -263, -258, -255, -251, -249, -246, -243, -241, -238, -233, -231, -227, -222, -220, -216, -214, -211, -208, -206, -204, -201, -198, -195, -190, -185, -181, -178, -174, -171, -167, -163, -160, -158, -155, -150, -146, -143, -138, -133, -131, -126, -123, -120, -118, -113, -108, -105, -101, -96, -92, -90, -86, -81, -77, -73, -70, -65, -62, -59, -54, -52, -47, -44, -39, -35, -32, -29, -26, -23, -21, -18, -16, -13, -9, -5, 0, 5, 8, 10, 15, 19, 21, 23, 27, 31, 33, 38, 43, 46, 50, 53, 57, 59, 63, 65, 70, 73, 77, 79, 83, 88, 91, 96, 98, 100, 105, 108, 112, 114, 118, 120, 123, 128, 131, 133, 135, 139, 142, 147, 152, 156, 159, 163, 166, 168, 171, 173, 178, 182, 186, 189, 193, 197, 199, 204, 207, 211, 214, 216, 221, 225, 228, 232, 234, 236, 238, 242, 245, 248, 251, 254, 258, 263, 267, 270, 272, 274, 279, 284, 287, 290, 293, 296, 300, 302, 304, 309, 313, 318, 323, 326, 331, 333, 335, 337, 339, 342, 346, 349, 353, 355}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-440, -436, -434, -430, -427, -422, -418, -414, -412, -409, -404, -400, -396, -394, -391, -389, -386, -383, -380, -377, -374, -370, -368, -366, -361, -357, -353, -348, -343, -341, -338, -333, -329, -325, -322, -320, -318, -314, -311, -309, -306, -304, -302, -299, -295, -293, -290, -288, -283, -281, -276, -271, -266, -264, -261, -256, -252, -249, -247, -242, -237, -232, -228, -223, -218, -215, -213, -209, -205, -202, -200, -198, -196, -194, -191, -186, -181, -178, -174, -171, -169, -166, -163, -158, -154, -149, -144, -142, -140, -135, -131, -127, -125, -123, -119, -114, -109, -107, -102, -98, -93, -88, -84, -82, -77, -72, -67, -64, -62, -59, -54, -51, -48, -46, -43, -38, -35, -31, -29, -24, -20, -16, -11, -6, -3, 1, 6, 9, 14, 16, 20, 25, 29, 34, 36, 39, 43, 47, 49, 52, 57, 59, 63, 65, 69, 74, 79, 84, 88, 92, 97, 100, 102, 105, 107, 111, 113, 118, 121, 124, 129, 131, 135, 138, 141, 144, 146, 148, 153, 155, 160, 163, 168, 170, 172, 174, 177, 178, 183, 185, 187, 190, 193, 198, 202, 205, 208, 212, 216, 220, 222, 226, 230, 235, 239, 243, 245, 249, 253, 258}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-212, -208, -204, -201, -198, -196, -193, -188, -186, -184, -182, -180, -176, -171, -166, -163, -161, -158, -156, -151, -149, -146, -144, -140, -136, -131, -128, -126, -122, -120, -117, -112, -107, -103, -98, -96, -94, -89, -85, -80, -76, -74, -70, -65, -63, -60, -55, -50, -45, -43, -40, -35, -31, -28, -25, -21, -19, -16, -11, -9, -5, -2, 2, 6, 11, 15, 18, 20, 25, 28, 32, 35, 40, 45, 48, 50, 52, 54, 59, 62, 67, 70, 75, 80, 83, 85, 87, 91, 93, 95, 100, 103, 107, 111, 113, 115, 117, 120, 122, 126, 130, 134, 136, 139, 142, 147, 150, 155, 160, 162, 166, 169, 171, 176, 178, 182, 184, 186, 189, 194, 198, 203, 206, 210, 215, 217, 221, 224, 227, 232, 235, 239, 243, 247, 252, 256, 261, 264, 269, 274, 278, 281, 285, 287, 289, 292, 297, 302, 306, 310, 313, 317, 322, 325, 328, 331, 334, 338, 341, 346, 351, 354, 357, 359, 364, 366, 370, 373, 378, 382, 384, 387, 392, 395, 400, 402, 404, 409, 413, 416, 421, 424, 428, 430, 432, 434, 436, 438, 441, 444, 449, 452, 456, 460, 462, 466, 469, 472, 475, 477}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-449, -446, -442, -437, -432, -427, -425, -421, -418, -416, -412, -408, -404, -402, -397, -394, -389, -385, -383, -378, -376, -372, -370, -368, -365, -362, -358, -355, -352, -347, -342, -337, -333, -330, -326, -322, -317, -312, -310, -305, -302, -298, -296, -291, -289, -286, -281, -276, -271, -266, -261, -256, -254, -251, -249, -247, -243, -241, -236, -233, -230, -225, -222, -220, -217, -213, -210, -205, -202, -198, -193, -188, -184, -181, -179, -177, -174, -169, -165, -161, -158, -156, -153, -151, -148, -146, -143, -138, -133, -131, -128, -124, -119, -116, -112, -110, -105, -102, -100, -96, -93, -88, -85, -82, -79, -75, -71, -69, -66, -61, -56, -52, -47, -43, -40, -35, -32, -28, -25, -20, -15, -12, -8, -4, -1, 3, 6, 8, 10, 14, 19, 24, 27, 29, 33, 36, 38, 41, 46, 51, 53, 55, 57, 59, 64, 66, 71, 73, 77, 81, 85, 90, 92, 95, 97, 99, 102, 105, 108, 113, 118, 123, 127, 132, 135, 139, 143, 148, 153, 157, 159, 164, 168, 172, 175, 176, 179, 181, 185, 187, 191, 193, 196, 198, 203, 206, 210, 215, 220, 225, 228, 230, 233, 237, 240, 243, 247, 249, 254, 258}) == true){
		throw new Exception("Method returned true on an array that didn't meet the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-298, -293, -290, -285, -281, -279, -275, -272, -267, -263, -260, -256, -254, -250, -248, -246, -242, -238, -235, -232, -230, -227, -224, -222, -219, -215, -210, -206, -202, -200, -198, -194, -191, -187, -183, -179, -176, -172, -167, -164, -161, -158, -155, -151, -146, -142, -138, -136, -132, -127, -124, -120, -115, -112, -109, -104, -102, -100, -95, -91, -86, -83, -80, -76, -71, -68, -63, -61, -57, -55, -50, -46, -43, -38, -33, -28, -26, -23, -19, -14, -9, -5, -3, -1, 2, 6, 11, 15, 20, 25, 28, 32, 36, 38, 41, 46, 51, 53, 58, 63, 66, 68, 72, 75, 78, 82, 85, 90, 92, 94, 96, 99, 101, 106, 109, 112, 115, 117, 119, 124, 127, 130, 134, 139, 142, 146, 149, 152, 154, 157, 162, 167, 169, 173, 176, 181, 185, 187, 192, 195, 200, 204, 209, 213, 216, 221, 223, 226, 230, 233, 238, 241, 246, 248, 253, 258, 261, 266, 271, 274, 279, 284, 288, 290, 295, 297, 300, 302, 307, 312, 315, 320, 323, 325, 327, 330, 335, 338, 342, 344, 349, 352, 355, 360, 363, 368, 370, 375, 379, 383, 388, 393, 396, 400, 405, 407, 412, 416, 420, 422}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		if(Assignment.doesTheArrayMeetCriteria_5_30(new int[]{-240, -236, -234, -231, -229, -227, -224, -222, -219, -214, -211, -206, -203, -199, -195, -192, -188, -184, -181, -178, -175, -173, -171, -167, -162, -160, -158, -154, -151, -147, -144, -139, -135, -132, -127, -124, -120, -117, -113, -111, -109, -106, -104, -99, -96, -92, -87, -85, -81, -76, -72, -69, -67, -63, -60, -56, -51, -49, -45, -40, -37, -35, -32, -28, -23, -19, -17, -13, -9, -7, -5, -2, 0, 4, 6, 9, 11, 14, 19, 24, 27, 31, 33, 35, 39, 43, 45, 50, 55, 59, 64, 68, 71, 75, 77, 81, 86, 88, 93, 96, 99, 101, 103, 108, 113, 115, 118, 120, 122, 124, 128, 131, 134, 136, 138, 140, 143, 147, 150, 153, 157, 159, 163, 167, 171, 173, 176, 180, 184, 187, 191, 196, 199, 202, 207, 209, 212, 214, 217, 219, 224, 228, 230, 235, 237, 239, 241, 245, 248, 252, 257, 259, 263, 268, 272, 275, 277, 279, 283, 286, 290, 295, 300, 304, 307, 309, 314, 317, 321, 324, 327, 332, 337, 340, 345, 349, 354, 357, 359, 362, 367, 372, 374, 379, 383, 386, 391, 393, 396, 400, 402, 406, 409, 412, 417, 422, 427, 432, 435, 438}) == false){
		throw new Exception("Method returned false on an array that met the criteria");
		}
		}
		catch (Exception e) {
		System.err.println(e.getMessage());
		}
		System.out.println("Finished testing 5.30");
		System.out.println("Starting Prime Test");
		try{
			if(!Assignment.isAPrime(53)){ throw new Exception("Method returned false on the following prime 53");
			}
			if(Assignment.isAPrime(54)){ 
				throw new Exception("Method returned true on the following non-prime 54");
			}
			if(Assignment.isAPrime(55)){ 
				throw new Exception("Method returned true on the following non-prime 55");
			}
			if(Assignment.isAPrime(56)){ 
				throw new Exception("Method returned true on the following non-prime 56");
			}
			if(Assignment.isAPrime(57)){ 
				throw new Exception("Method returned true on the following non-prime 57");
			}
			if(Assignment.isAPrime(58)){ 
				throw new Exception("Method returned true on the following non-prime 58");
			}
			if(!Assignment.isAPrime(59)){ throw new Exception("Method returned false on the following prime 59");
			}
			if(Assignment.isAPrime(60)){ 
				throw new Exception("Method returned true on the following non-prime 60");
			}
			if(!Assignment.isAPrime(61)){ throw new Exception("Method returned false on the following prime 61");
			}
			if(Assignment.isAPrime(62)){ 
				throw new Exception("Method returned true on the following non-prime 62");
			}
			if(Assignment.isAPrime(63)){ 
				throw new Exception("Method returned true on the following non-prime 63");
			}
			if(Assignment.isAPrime(64)){ 
				throw new Exception("Method returned true on the following non-prime 64");
			}
			if(Assignment.isAPrime(65)){ 
				throw new Exception("Method returned true on the following non-prime 65");
			}
			if(Assignment.isAPrime(66)){ 
				throw new Exception("Method returned true on the following non-prime 66");
			}
			if(!Assignment.isAPrime(67)){ throw new Exception("Method returned false on the following prime 67");
			}
			if(Assignment.isAPrime(68)){ 
				throw new Exception("Method returned true on the following non-prime 68");
			}
			if(Assignment.isAPrime(69)){ 
				throw new Exception("Method returned true on the following non-prime 69");
			}
			if(Assignment.isAPrime(70)){ 
				throw new Exception("Method returned true on the following non-prime 70");
			}
			if(!Assignment.isAPrime(71)){ throw new Exception("Method returned false on the following prime 71");
			}
			if(Assignment.isAPrime(72)){ 
				throw new Exception("Method returned true on the following non-prime 72");
			}
			if(!Assignment.isAPrime(73)){ throw new Exception("Method returned false on the following prime 73");
			}
			if(Assignment.isAPrime(74)){ 
				throw new Exception("Method returned true on the following non-prime 74");
			}
			if(Assignment.isAPrime(75)){ 
				throw new Exception("Method returned true on the following non-prime 75");
			}
			if(Assignment.isAPrime(76)){ 
				throw new Exception("Method returned true on the following non-prime 76");
			}
			if(Assignment.isAPrime(77)){ 
				throw new Exception("Method returned true on the following non-prime 77");
			}
			if(Assignment.isAPrime(78)){ 
				throw new Exception("Method returned true on the following non-prime 78");
			}
			if(!Assignment.isAPrime(79)){ throw new Exception("Method returned false on the following prime 79");
			}
			if(Assignment.isAPrime(80)){ 
				throw new Exception("Method returned true on the following non-prime 80");
			}
			if(Assignment.isAPrime(81)){ 
				throw new Exception("Method returned true on the following non-prime 81");
			}
			if(Assignment.isAPrime(82)){ 
				throw new Exception("Method returned true on the following non-prime 82");
			}
			if(!Assignment.isAPrime(83)){ throw new Exception("Method returned false on the following prime 83");
			}
			if(Assignment.isAPrime(84)){ 
				throw new Exception("Method returned true on the following non-prime 84");
			}
			if(Assignment.isAPrime(85)){ 
				throw new Exception("Method returned true on the following non-prime 85");
			}
			if(Assignment.isAPrime(86)){ 
				throw new Exception("Method returned true on the following non-prime 86");
			}
			if(Assignment.isAPrime(87)){ 
				throw new Exception("Method returned true on the following non-prime 87");
			}
			if(Assignment.isAPrime(88)){ 
				throw new Exception("Method returned true on the following non-prime 88");
			}
			if(!Assignment.isAPrime(89)){ throw new Exception("Method returned false on the following prime 89");
			}
			if(Assignment.isAPrime(90)){ 
				throw new Exception("Method returned true on the following non-prime 90");
			}
			if(Assignment.isAPrime(91)){ 
				throw new Exception("Method returned true on the following non-prime 91");
			}
			if(Assignment.isAPrime(92)){ 
				throw new Exception("Method returned true on the following non-prime 92");
			}
			if(Assignment.isAPrime(93)){ 
				throw new Exception("Method returned true on the following non-prime 93");
			}
			if(Assignment.isAPrime(94)){ 
				throw new Exception("Method returned true on the following non-prime 94");
			}
			if(Assignment.isAPrime(95)){ 
				throw new Exception("Method returned true on the following non-prime 95");
			}
			if(Assignment.isAPrime(96)){ 
				throw new Exception("Method returned true on the following non-prime 96");
			}
			if(!Assignment.isAPrime(97)){ throw new Exception("Method returned false on the following prime 97");
			}
			if(Assignment.isAPrime(98)){ 
				throw new Exception("Method returned true on the following non-prime 98");
			}
			if(Assignment.isAPrime(99)){ 
				throw new Exception("Method returned true on the following non-prime 99");
			}
			if(Assignment.isAPrime(100)){ 
				throw new Exception("Method returned true on the following non-prime 100");
			}
			if(!Assignment.isAPrime(101)){ throw new Exception("Method returned false on the following prime 101");
			}
			if(Assignment.isAPrime(102)){ 
				throw new Exception("Method returned true on the following non-prime 102");
			}
			if(!Assignment.isAPrime(103)){ throw new Exception("Method returned false on the following prime 103");
			}
			if(Assignment.isAPrime(104)){ 
				throw new Exception("Method returned true on the following non-prime 104");
			}
			if(Assignment.isAPrime(105)){ 
				throw new Exception("Method returned true on the following non-prime 105");
			}
			if(Assignment.isAPrime(106)){ 
				throw new Exception("Method returned true on the following non-prime 106");
			}
			if(!Assignment.isAPrime(107)){ throw new Exception("Method returned false on the following prime 107");
			}
			if(Assignment.isAPrime(108)){ 
				throw new Exception("Method returned true on the following non-prime 108");
			}
			if(!Assignment.isAPrime(109)){ throw new Exception("Method returned false on the following prime 109");
			}
			if(Assignment.isAPrime(110)){ 
				throw new Exception("Method returned true on the following non-prime 110");
			}
			if(Assignment.isAPrime(111)){ 
				throw new Exception("Method returned true on the following non-prime 111");
			}
			if(Assignment.isAPrime(112)){ 
				throw new Exception("Method returned true on the following non-prime 112");
			}
			if(!Assignment.isAPrime(113)){ throw new Exception("Method returned false on the following prime 113");
			}
			if(Assignment.isAPrime(114)){ 
				throw new Exception("Method returned true on the following non-prime 114");
			}
			if(Assignment.isAPrime(115)){ 
				throw new Exception("Method returned true on the following non-prime 115");
			}
			if(Assignment.isAPrime(116)){ 
				throw new Exception("Method returned true on the following non-prime 116");
			}
			if(Assignment.isAPrime(117)){ 
				throw new Exception("Method returned true on the following non-prime 117");
			}
			if(Assignment.isAPrime(118)){ 
				throw new Exception("Method returned true on the following non-prime 118");
			}
			if(Assignment.isAPrime(119)){ 
				throw new Exception("Method returned true on the following non-prime 119");
			}
			if(Assignment.isAPrime(120)){ 
				throw new Exception("Method returned true on the following non-prime 120");
			}
			if(Assignment.isAPrime(121)){ 
				throw new Exception("Method returned true on the following non-prime 121");
			}
			if(Assignment.isAPrime(122)){ 
				throw new Exception("Method returned true on the following non-prime 122");
			}
			if(Assignment.isAPrime(123)){ 
				throw new Exception("Method returned true on the following non-prime 123");
			}
			if(Assignment.isAPrime(124)){ 
				throw new Exception("Method returned true on the following non-prime 124");
			}
			if(Assignment.isAPrime(125)){ 
				throw new Exception("Method returned true on the following non-prime 125");
			}
			if(Assignment.isAPrime(126)){ 
				throw new Exception("Method returned true on the following non-prime 126");
			}
			if(!Assignment.isAPrime(127)){ throw new Exception("Method returned false on the following prime 127");
			}
			if(Assignment.isAPrime(128)){ 
				throw new Exception("Method returned true on the following non-prime 128");
			}
			if(Assignment.isAPrime(129)){ 
				throw new Exception("Method returned true on the following non-prime 129");
			}
			if(Assignment.isAPrime(130)){ 
				throw new Exception("Method returned true on the following non-prime 130");
			}
			if(!Assignment.isAPrime(131)){ throw new Exception("Method returned false on the following prime 131");
			}
			if(Assignment.isAPrime(132)){ 
				throw new Exception("Method returned true on the following non-prime 132");
			}
			if(Assignment.isAPrime(133)){ 
				throw new Exception("Method returned true on the following non-prime 133");
			}
			if(Assignment.isAPrime(134)){ 
				throw new Exception("Method returned true on the following non-prime 134");
			}
			if(Assignment.isAPrime(135)){ 
				throw new Exception("Method returned true on the following non-prime 135");
			}
			if(Assignment.isAPrime(136)){ 
				throw new Exception("Method returned true on the following non-prime 136");
			}
			if(!Assignment.isAPrime(137)){ throw new Exception("Method returned false on the following prime 137");
			}
			if(Assignment.isAPrime(138)){ 
				throw new Exception("Method returned true on the following non-prime 138");
			}
			if(!Assignment.isAPrime(139)){ throw new Exception("Method returned false on the following prime 139");
			}
			if(Assignment.isAPrime(140)){ 
				throw new Exception("Method returned true on the following non-prime 140");
			}
			if(Assignment.isAPrime(141)){ 
				throw new Exception("Method returned true on the following non-prime 141");
			}
			if(Assignment.isAPrime(142)){ 
				throw new Exception("Method returned true on the following non-prime 142");
			}
			if(Assignment.isAPrime(143)){ 
				throw new Exception("Method returned true on the following non-prime 143");
			}
			if(Assignment.isAPrime(144)){ 
				throw new Exception("Method returned true on the following non-prime 144");
			}
			if(Assignment.isAPrime(145)){ 
				throw new Exception("Method returned true on the following non-prime 145");
			}
			if(Assignment.isAPrime(146)){ 
				throw new Exception("Method returned true on the following non-prime 146");
			}
			if(Assignment.isAPrime(147)){ 
				throw new Exception("Method returned true on the following non-prime 147");
			}
			if(Assignment.isAPrime(148)){ 
				throw new Exception("Method returned true on the following non-prime 148");
			}
			if(!Assignment.isAPrime(149)){ throw new Exception("Method returned false on the following prime 149");
			}
			if(Assignment.isAPrime(150)){ 
				throw new Exception("Method returned true on the following non-prime 150");
			}
			if(!Assignment.isAPrime(151)){ throw new Exception("Method returned false on the following prime 151");
			}
			if(Assignment.isAPrime(152)){ 
				throw new Exception("Method returned true on the following non-prime 152");
			}
			if(Assignment.isAPrime(153)){ 
				throw new Exception("Method returned true on the following non-prime 153");
			}
			if(Assignment.isAPrime(154)){ 
				throw new Exception("Method returned true on the following non-prime 154");
			}
			if(Assignment.isAPrime(155)){ 
				throw new Exception("Method returned true on the following non-prime 155");
			}
			if(Assignment.isAPrime(156)){ 
				throw new Exception("Method returned true on the following non-prime 156");
			}
			if(!Assignment.isAPrime(157)){ throw new Exception("Method returned false on the following prime 157");
			}
			if(Assignment.isAPrime(158)){ 
				throw new Exception("Method returned true on the following non-prime 158");
			}
			if(Assignment.isAPrime(159)){ 
				throw new Exception("Method returned true on the following non-prime 159");
			}
			if(Assignment.isAPrime(160)){ 
				throw new Exception("Method returned true on the following non-prime 160");
			}
			if(Assignment.isAPrime(161)){ 
				throw new Exception("Method returned true on the following non-prime 161");
			}
			if(Assignment.isAPrime(162)){ 
				throw new Exception("Method returned true on the following non-prime 162");
			}
			if(!Assignment.isAPrime(163)){ throw new Exception("Method returned false on the following prime 163");
			}
			if(Assignment.isAPrime(164)){ 
				throw new Exception("Method returned true on the following non-prime 164");
			}
			if(Assignment.isAPrime(165)){ 
				throw new Exception("Method returned true on the following non-prime 165");
			}
			if(Assignment.isAPrime(166)){ 
				throw new Exception("Method returned true on the following non-prime 166");
			}
			if(!Assignment.isAPrime(167)){ throw new Exception("Method returned false on the following prime 167");
			}
			if(Assignment.isAPrime(168)){ 
				throw new Exception("Method returned true on the following non-prime 168");
			}
			if(Assignment.isAPrime(169)){ 
				throw new Exception("Method returned true on the following non-prime 169");
			}
			if(Assignment.isAPrime(170)){ 
				throw new Exception("Method returned true on the following non-prime 170");
			}
			if(Assignment.isAPrime(171)){ 
				throw new Exception("Method returned true on the following non-prime 171");
			}
			if(Assignment.isAPrime(172)){ 
				throw new Exception("Method returned true on the following non-prime 172");
			}
			if(!Assignment.isAPrime(173)){ throw new Exception("Method returned false on the following prime 173");
			}
			if(Assignment.isAPrime(174)){ 
				throw new Exception("Method returned true on the following non-prime 174");
			}
			if(Assignment.isAPrime(175)){ 
				throw new Exception("Method returned true on the following non-prime 175");
			}
			if(Assignment.isAPrime(176)){ 
				throw new Exception("Method returned true on the following non-prime 176");
			}
			if(Assignment.isAPrime(177)){ 
				throw new Exception("Method returned true on the following non-prime 177");
			}
			if(Assignment.isAPrime(178)){ 
				throw new Exception("Method returned true on the following non-prime 178");
			}
			if(!Assignment.isAPrime(179)){ throw new Exception("Method returned false on the following prime 179");
			}
			if(Assignment.isAPrime(180)){ 
				throw new Exception("Method returned true on the following non-prime 180");
			}
			if(!Assignment.isAPrime(181)){ throw new Exception("Method returned false on the following prime 181");
			}
			if(Assignment.isAPrime(182)){ 
				throw new Exception("Method returned true on the following non-prime 182");
			}
			if(Assignment.isAPrime(183)){ 
				throw new Exception("Method returned true on the following non-prime 183");
			}
			if(Assignment.isAPrime(184)){ 
				throw new Exception("Method returned true on the following non-prime 184");
			}
			if(Assignment.isAPrime(185)){ 
				throw new Exception("Method returned true on the following non-prime 185");
			}
			if(Assignment.isAPrime(186)){ 
				throw new Exception("Method returned true on the following non-prime 186");
			}
			if(Assignment.isAPrime(187)){ 
				throw new Exception("Method returned true on the following non-prime 187");
			}
			if(Assignment.isAPrime(188)){ 
				throw new Exception("Method returned true on the following non-prime 188");
			}
			if(Assignment.isAPrime(189)){ 
				throw new Exception("Method returned true on the following non-prime 189");
			}
			if(Assignment.isAPrime(190)){ 
				throw new Exception("Method returned true on the following non-prime 190");
			}
			if(!Assignment.isAPrime(191)){ throw new Exception("Method returned false on the following prime 191");
			}
			if(Assignment.isAPrime(192)){ 
				throw new Exception("Method returned true on the following non-prime 192");
			}
			if(!Assignment.isAPrime(193)){ throw new Exception("Method returned false on the following prime 193");
			}
			if(Assignment.isAPrime(194)){ 
				throw new Exception("Method returned true on the following non-prime 194");
			}
			if(Assignment.isAPrime(195)){ 
				throw new Exception("Method returned true on the following non-prime 195");
			}
			if(Assignment.isAPrime(196)){ 
				throw new Exception("Method returned true on the following non-prime 196");
			}
			if(!Assignment.isAPrime(197)){ throw new Exception("Method returned false on the following prime 197");
			}
			if(Assignment.isAPrime(198)){ 
				throw new Exception("Method returned true on the following non-prime 198");
			}
			if(!Assignment.isAPrime(199)){ throw new Exception("Method returned false on the following prime 199");
			}
			if(Assignment.isAPrime(200)){ 
				throw new Exception("Method returned true on the following non-prime 200");
			}
			if(Assignment.isAPrime(201)){ 
				throw new Exception("Method returned true on the following non-prime 201");
			}
			if(Assignment.isAPrime(202)){ 
				throw new Exception("Method returned true on the following non-prime 202");
			}
			if(Assignment.isAPrime(203)){ 
				throw new Exception("Method returned true on the following non-prime 203");
			}
			if(Assignment.isAPrime(204)){ 
				throw new Exception("Method returned true on the following non-prime 204");
			}
			if(Assignment.isAPrime(205)){ 
				throw new Exception("Method returned true on the following non-prime 205");
			}
			if(Assignment.isAPrime(206)){ 
				throw new Exception("Method returned true on the following non-prime 206");
			}
			if(Assignment.isAPrime(207)){ 
				throw new Exception("Method returned true on the following non-prime 207");
			}
			if(Assignment.isAPrime(208)){ 
				throw new Exception("Method returned true on the following non-prime 208");
			}
			if(Assignment.isAPrime(209)){ 
				throw new Exception("Method returned true on the following non-prime 209");
			}
			if(Assignment.isAPrime(210)){ 
				throw new Exception("Method returned true on the following non-prime 210");
			}
			if(!Assignment.isAPrime(211)){ throw new Exception("Method returned false on the following prime 211");
			}
			if(Assignment.isAPrime(212)){ 
				throw new Exception("Method returned true on the following non-prime 212");
			}
			if(Assignment.isAPrime(213)){ 
				throw new Exception("Method returned true on the following non-prime 213");
			}
			if(Assignment.isAPrime(214)){ 
				throw new Exception("Method returned true on the following non-prime 214");
			}
			if(Assignment.isAPrime(215)){ 
				throw new Exception("Method returned true on the following non-prime 215");
			}
			if(Assignment.isAPrime(216)){ 
				throw new Exception("Method returned true on the following non-prime 216");
			}
			if(Assignment.isAPrime(217)){ 
				throw new Exception("Method returned true on the following non-prime 217");
			}
			if(Assignment.isAPrime(218)){ 
				throw new Exception("Method returned true on the following non-prime 218");
			}
			if(Assignment.isAPrime(219)){ 
				throw new Exception("Method returned true on the following non-prime 219");
			}
			if(Assignment.isAPrime(220)){ 
				throw new Exception("Method returned true on the following non-prime 220");
			}
			if(Assignment.isAPrime(221)){ 
				throw new Exception("Method returned true on the following non-prime 221");
			}
			if(Assignment.isAPrime(222)){ 
				throw new Exception("Method returned true on the following non-prime 222");
			}
			if(!Assignment.isAPrime(223)){ throw new Exception("Method returned false on the following prime 223");
			}
			if(Assignment.isAPrime(224)){ 
				throw new Exception("Method returned true on the following non-prime 224");
			}
			if(Assignment.isAPrime(225)){ 
				throw new Exception("Method returned true on the following non-prime 225");
			}
			if(Assignment.isAPrime(226)){ 
				throw new Exception("Method returned true on the following non-prime 226");
			}
			if(!Assignment.isAPrime(227)){ throw new Exception("Method returned false on the following prime 227");
			}
			if(Assignment.isAPrime(228)){ 
				throw new Exception("Method returned true on the following non-prime 228");
			}
			if(!Assignment.isAPrime(229)){ throw new Exception("Method returned false on the following prime 229");
			}
			if(Assignment.isAPrime(230)){ 
				throw new Exception("Method returned true on the following non-prime 230");
			}
			if(Assignment.isAPrime(231)){ 
				throw new Exception("Method returned true on the following non-prime 231");
			}
			if(Assignment.isAPrime(232)){ 
				throw new Exception("Method returned true on the following non-prime 232");
			}
		}
		catch (Exception e) {
			System.err.println(e.getMessage());
		}
		System.out.println("Finished testing primes");

		System.out.println("Starting majority element test");
		try{
			if(Assignment.majorityElement(new int[]{26, 42, 16, 42, 35, 42, 42, 42, 42, 42, 6, 25, 28, 42, 25, 42, 26, 42, 20, 42, 6, 42, 42, 42, 42, 42, 42, 42, 16, 35, 33, 23, 17, 42, 42, 0, 22, 42, 17, 3, 42, 42, 24, 42, 25, 42, 12, 1, 36}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{30, 1, 30, 27, 7, 30, 26, 30, 20, 30, 30, 30, 30, 34, 30, 30, 30, 30, 13, 25, 6, 30, 2, 17, 7, 30, 30, 3, 9, 15, 2, 28, 2, 30, 30, 30, 30}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{13, 13, 13, 11, 17, 0, 9, 18, 8, 11, 17, 11, 10, 18, 10, 5, 2, 12, 13, 7, 15, 0, 14, 5, 15, 16, 16, 4, 2, 0, 2, 17, 9, 6, 0, 17, 16, 13, 1, 7, 14, 20}) == true){
				throw new Exception("Method returned true on an array that didn't meet the criteria");
			}
			if(Assignment.majorityElement(new int[]{7, 3, 13, 2, 20, 2, 2, 2, 12, 0, 5, 16, 5, 14, 18, 11, 19, 18, 20, 15, 2, 10, 7, 3, 9, 1, 22, 3, 16, 3, 6, 1, 5, 20, 12, 5, 0, 3, 20, 12, 8, 13, 2, 18, 8}) == true){
				throw new Exception("Method returned true on an array that didn't meet the criteria");
			}
			if(Assignment.majorityElement(new int[]{5, 0, 4, 6, 2, 2, 6, 2, 2, 0, 2, 3, 4}) == true){
				throw new Exception("Method returned true on an array that didn't meet the criteria");
			}
			if(Assignment.majorityElement(new int[]{23, 28, 14, 30, 28, 23, 19, 28, 11, 28, 28, 18, 9, 28, 23, 28, 8, 2, 28, 27, 0, 28, 26, 28, 3, 28, 28, 28, 28, 28, 28}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{0, 33, 33, 0, 33, 1, 32, 25, 22, 30, 24, 33, 34, 4, 33, 33, 33, 33, 33, 23, 33, 33, 33, 33, 33, 2, 33, 16, 33, 33, 21, 33, 16, 23, 6, 33}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{2, 7, 6, 2, 8, 7, 2, 3, 5, 6, 0, 6, 2, 2, 6, 3, 2, 0}) == true){
				throw new Exception("Method returned true on an array that didn't meet the criteria");
			}
			if(Assignment.majorityElement(new int[]{14, 4, 7, 7, 6, 6, 14, 16, 0, 8, 0, 7, 2, 6, 13, 6, 20, 11, 1, 15, 16, 17, 5, 20, 10, 16, 17, 3, 2, 5, 12, 8, 11, 17, 8, 14, 15, 13, 3, 7, 5}) == true){
				throw new Exception("Method returned true on an array that didn't meet the criteria");
			}
			if(Assignment.majorityElement(new int[]{5, 16, 11, 0, 19, 5, 5, 5, 11, 5, 2, 15, 5, 5, 1, 8, 5, 4, 5, 5, 5, 5}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{17, 17, 17, 18, 17, 17, 17, 17, 17, 1, 11, 18, 0, 7, 9, 2, 17, 8, 17}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{25, 22, 22, 10, 9, 22, 22, 22, 13, 13, 22, 10, 3, 22, 9, 22, 21, 18, 22, 1, 22, 11, 22, 22, 22, 22}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{6, 12, 11, 19, 11, 11, 0, 11, 25, 22, 25, 11, 31, 11, 11, 11, 31, 24, 11, 28, 11, 7, 11, 1, 11, 11, 11, 11, 24, 11, 0, 16, 11, 11}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{18, 21, 10, 18, 18, 18, 3, 18, 18, 18, 0, 0, 18, 10, 18, 18, 8, 16, 1, 18, 24, 18, 23, 13, 18}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{13, 13, 13, 1, 13, 4, 13, 12, 10, 13, 13, 13, 11, 6}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{0, 3, 7, 4, 1, 6, 1, 1, 5, 8, 1, 6, 2, 7, 5, 4, 3, 7, 3}) == true){
				throw new Exception("Method returned true on an array that didn't meet the criteria");
			}
			if(Assignment.majorityElement(new int[]{11, 23, 28, 28, 23, 28, 28, 28, 15, 0, 28, 21, 20, 27, 28, 28, 28, 4, 8, 28, 28, 15, 22, 28, 28, 28, 24, 21, 28, 28}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{11, 20, 8, 8, 8, 8, 8, 0, 22, 11, 9, 8, 5, 8, 19, 5, 8, 8, 8, 8, 6, 5, 8}) == false){
				throw new Exception("Method returned false on an array that met the criteria");
			}
			if(Assignment.majorityElement(new int[]{14, 4, 0, 2, 9, 6, 12, 10, 14, 2, 8, 3, 5, 13, 2, 8, 0, 0, 11, 12, 6, 9, 1, 12, 5, 1, 14, 11, 12, 4}) == true){
				throw new Exception("Method returned true on an array that didn't meet the criteria");
			}
			if(Assignment.majorityElement(new int[]{2, 1, 0, 0, 4, 0, 4, 6, 5, 4, 3, 5, 1}) == true){
				throw new Exception("Method returned true on an array that didn't meet the criteria");
			}
		}
		catch (Exception e) {
			System.err.println(e.getMessage());
		}
		System.out.println("Finished testing majority element");


	}

}
