
public class Assignment_08_27_Tester {


	public static void main(String[] args) {
		System.out.println("Starting testing for 08_27");
		Integer [] a = null;
		int nonDups = 0;
		int answer = 0;
		try {
			a = new Integer[]{4, 3, 6, 3, 5, 7, 9, 2};
			nonDups = 7;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 7){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{2, 7, 0, 3, 5};
			nonDups = 5;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 5){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{3, 4, 6, 0, 2, 5};
			nonDups = 6;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 6){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{9, 5, 3, 1, 8, 0};
			nonDups = 6;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 6){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{4, 2, 1, 1, 5};
			nonDups = 4;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 4){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{10, 83, 93, 60, 50, 53, 67, 86, 28, 59, 21, 21, 34, 36, 51, 95, 92, 93, 21, 44, 6, 8, 91, 63, 84, 11, 68, 24, 30, 41, 49, 64, 11, 78, 23, 58, 78, 28, 68, 75, 42, 26, 44, 25, 32, 9, 97, 52, 83, 46, 99, 46, 85, 88, 55, 9, 89, 7, 54, 3, 67, 30, 55, 57, 65, 2, 51, 0, 36, 83, 19, 91, 8, 64, 44, 34, 9, 87, 26, 25, 49, 19, 57, 93, 99, 26, 70, 63, 87, 24, 98, 43, 78, 90, 49, 67, 5, 31, 8, 10, 32, 53, 60, 44, 8, 8, 35, 68, 42, 13, 90, 53, 88, 6, 54, 54, 83, 83, 21, 65, 95, 48, 29, 67, 18, 92, 87, 98, 55, 22, 30, 88, 71, 96, 27, 16, 20, 79, 68, 63, 98, 97, 85};
			nonDups = 73;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 73){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{25, 33, 60, 12, 61, 31, 25, 42, 57, 90, 57, 11, 25, 39, 98, 61, 55, 28, 34, 38, 78, 51, 66, 51, 85, 64, 27, 75, 47, 71, 9, 74, 49, 14, 73, 97, 55, 54, 1, 47, 20, 78, 48, 90, 56, 64, 20, 68, 32, 93, 58, 34, 37, 92, 36, 48, 10, 75, 27, 67, 72, 61, 54, 47, 28, 60, 23, 96, 60, 43, 15, 53, 72, 40, 97, 44, 71, 81, 72, 81, 46, 20, 3, 82, 4, 46, 27, 36, 5, 16, 43, 4, 22, 69, 7, 81, 45, 53, 39, 77, 87, 78, 72, 59, 34, 27, 21, 33, 54, 25, 56, 56, 36, 17, 27, 46, 85, 56, 82, 98, 85, 65, 8, 74, 39, 15, 86, 58, 73, 51, 85, 37, 74, 96, 67, 54, 60, 6, 28, 45, 66, 80, 75, 64, 7, 16, 36, 34, 99, 46, 66, 39, 62, 0, 53, 74, 30, 49, 74, 74, 88, 84, 60, 7, 92, 80, 32, 26, 58, 70, 21, 1, 17, 67, 9, 46, 82, 49, 87, 78, 38, 21, 97, 14, 53, 79, 20, 50, 67, 69, 87, 98, 77, 89, 54, 39};
			nonDups = 85;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 85){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{9, 29, 46, 65, 66, 40, 69, 39, 2, 31, 74, 61, 18, 44, 26, 88, 48, 5, 44, 82, 93, 22, 27, 95, 88, 98, 42, 21, 56, 99, 25, 55, 8, 74, 52, 58, 18, 48, 94, 84, 93, 0, 0, 9, 87, 10, 82, 35, 3, 23, 3, 69, 86, 39, 20, 72, 61, 72, 78, 7, 71, 9, 85, 97, 56, 55, 54, 57, 56, 7, 9, 94, 11, 43, 88, 49, 71, 95, 27, 4, 81, 61, 36, 53, 66, 69, 29, 4, 73, 61, 78, 22, 98, 48, 77, 55, 89, 73, 0, 83, 56, 17, 44, 61, 71, 27, 32, 40, 38, 1, 70, 80, 58, 84, 64, 69, 94, 15, 76, 52, 38, 97, 53, 39, 93, 13, 12, 29, 75, 8, 50, 31, 45, 78, 41, 26, 29, 29, 59, 64, 79, 27, 3, 54, 94, 90, 42, 43, 58, 71, 98, 22, 50, 21, 59, 9, 85, 40, 72, 48, 46, 26, 77, 50, 52, 10, 30, 99, 81, 28};
			nonDups = 82;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 82){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{24, 7, 87, 18, 84, 15, 69, 8, 52, 56, 85, 66, 28, 89, 26, 32, 76, 91, 12, 58, 22, 46, 48, 64, 8, 16, 27, 60, 47, 52, 50, 82, 51, 84, 44, 40, 47, 8, 95, 44, 61, 44, 85, 24, 75, 52, 58, 40, 45, 94, 11, 58, 7, 0, 55, 7, 0, 81, 54, 94, 73, 59, 50, 48, 80, 56, 10, 95, 4, 46, 19, 95, 57, 67, 79, 63, 97, 21, 96, 68, 18, 43, 1, 97, 8, 74, 40, 83, 60, 72, 84, 84, 20, 51, 72, 92, 50, 62, 1, 15, 50, 37, 48, 30, 91, 78, 31, 81, 90, 41, 81, 1, 86, 52, 78, 84, 70, 16, 93, 18, 17, 61, 15, 74, 0, 24, 37, 39, 45, 75, 93, 33, 75, 86, 98, 61, 31, 2, 36, 80, 30, 3, 28, 11, 38, 67, 42, 73, 55, 9, 86, 30, 90, 87, 60, 49, 52, 25, 87, 32, 54, 84, 29, 27, 6, 44, 81, 35, 50, 17, 52, 30, 4, 48, 89, 53, 41, 94, 28, 46, 20, 53, 97, 39, 92, 8, 62, 3, 14, 90, 41, 64, 33, 39, 23, 63, 3, 35, 22};
			nonDups = 92;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 92){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{5, 98, 9, 96, 99, 16, 64, 60, 88, 79, 67, 51, 83, 92, 5, 84, 93, 35, 17, 82, 38, 62, 71, 26, 70, 81, 28, 13, 54, 90, 5, 68, 76, 92, 50, 9, 87, 50, 63, 96, 61, 98, 16, 27, 38, 42, 63, 16, 89, 84, 15, 77, 31, 70, 97, 69, 68, 50, 14, 62, 70, 13, 11, 83, 50, 58, 24, 24, 78, 90, 25, 96, 69, 78, 8, 71, 33, 76, 1, 94, 2, 3, 96, 77, 45, 43, 39, 3, 20, 6, 28, 29, 65, 54, 50, 61, 2, 75, 13, 9, 56, 72, 41, 5, 77, 74, 59, 86};
			nonDups = 69;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 69){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{31, 4, 32, 14, 53, 15, 62, 2, 14, 96, 24, 30, 39, 47, 83, 61, 29, 7, 74, 16, 26, 72, 18, 83, 35, 92, 32, 50, 24, 55, 4, 18, 30, 26, 50, 49, 25, 49, 60, 59, 41, 57, 50, 96, 19, 98, 14, 3, 50, 0, 20, 0, 45, 13, 26, 54, 96, 11, 30, 82, 50, 0, 1, 85, 6, 68, 9, 23, 91, 54, 79, 45, 98, 76, 29, 37, 74, 93, 26, 67, 70, 64, 84, 92, 11, 43, 17, 32, 22, 34, 80, 65, 30, 58, 74, 56, 83, 55, 52, 47, 90, 78, 90, 40, 33, 31, 46, 62, 3, 19, 41, 62, 81, 74, 39, 61, 28, 94, 55, 33, 59, 4, 28, 81, 58, 42, 91, 63, 85, 69, 83, 93, 86, 25, 91, 53, 90, 56, 44, 38, 75, 26, 13, 3, 39, 43, 32, 95, 9, 10, 79, 21, 45, 57, 84, 99, 10, 29, 63};
			nonDups = 85;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 85){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{93, 41, 88, 54, 52, 69, 85, 36, 88, 77, 34, 24, 41, 79, 32, 33, 16, 82, 61, 62, 61, 99, 56, 97, 64, 8, 54, 11, 21, 0, 47, 90, 80, 46, 52, 78, 28, 28, 51, 91, 32, 4, 57, 4, 70, 38, 27, 63, 96, 3, 80, 89, 58, 59, 56, 29, 94, 51, 93, 51, 57, 22, 52, 54, 6, 30, 87, 56, 40, 14, 74, 67, 25, 83, 80, 3, 49, 76, 87, 89, 10, 51, 84, 51, 97, 87, 58, 82, 39, 87, 50, 13, 64, 49, 72, 49, 44, 57, 61, 84, 56, 53, 52, 55, 23, 94, 96, 64, 17, 97, 55, 78, 2, 83, 38, 33, 60, 63, 17, 41, 3, 31, 90, 67, 34, 9, 98, 3, 75, 88, 15, 21, 61, 6, 82, 43, 30, 62, 0, 36, 35, 69, 93, 3, 84, 14, 36, 43, 36, 18, 94, 39, 38, 84, 0, 37, 60, 90, 59, 84};
			nonDups = 81;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 81){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{49, 88, 89, 46, 91, 58, 83, 74, 89, 39, 34, 37, 92, 71, 71, 70, 3, 34, 82, 83, 57, 42, 75, 40, 11, 87, 56, 32, 27, 96, 16, 99, 72, 60, 41, 77, 54, 29, 11, 47, 83, 38, 61, 56, 15, 93, 53, 75, 37, 1, 59, 8, 30, 16, 64, 33, 39, 67, 17, 99, 89, 39, 63, 38, 93, 38, 65, 21, 75, 95, 81, 36, 78, 49, 21, 12, 5, 62, 62, 93, 70, 9, 48, 20, 32, 49, 40, 34, 16, 9, 53, 10, 16, 14, 19, 27, 91, 0, 87, 55, 86, 41, 52, 76, 80, 35};
			nonDups = 71;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 71){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{88, 77, 88, 96, 86, 21, 61, 93, 73, 66, 66, 2, 91, 63, 31, 96, 88, 88, 57, 73, 64, 42, 72, 54, 97, 74, 24, 52, 49, 59, 32, 69, 24, 7, 32, 39, 90, 49, 2, 11, 91, 16, 92, 68, 20, 91, 85, 1, 68, 52, 28, 49, 1, 96, 19, 14, 4, 30, 54, 90, 19, 60, 44, 11, 64, 51, 7, 89, 72, 81, 32, 66, 91, 26, 26, 58, 96, 92, 52, 69, 46, 57, 74, 91, 36, 68, 72, 15, 18, 23, 2, 23, 85, 39, 28, 99, 1, 5, 39, 40, 3, 38, 58, 85, 29, 83, 78, 34, 6, 67, 8, 70, 98, 61, 45, 43, 43, 78, 4, 44, 68, 28, 89, 55, 47, 2, 30, 57, 26, 9, 94, 91, 95, 55, 76, 18, 68, 66, 37, 12, 57, 52, 58, 58, 41, 74, 13, 26, 69, 71, 54, 90, 33, 83, 59, 74, 57, 57, 36, 68, 24, 51, 62, 94, 87, 52, 26, 58, 12, 93, 30, 86, 99, 5, 17, 41, 58, 82, 80, 27, 42, 50, 10, 37, 82, 86, 0, 93, 71};
			nonDups = 90;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 90){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{96, 75, 23, 86, 88, 73, 14, 35, 15, 26, 87, 58, 9, 2, 31, 37, 20, 26, 49, 9, 21, 22, 98, 83, 76, 88, 44, 74, 30, 86, 63, 29, 95, 52, 28, 59, 21, 42, 6, 52, 92, 34, 39, 10, 19, 51, 23, 0, 44, 25, 36, 80, 79, 83, 70, 32, 23, 11, 32, 64, 90, 90, 33, 46, 67, 85, 32, 70, 89, 56, 17, 69, 2, 2, 28, 18, 59, 26, 28, 16, 43, 13, 66, 56, 76, 48, 73, 58, 69, 9, 54, 82, 82, 85, 81, 10, 82, 14, 95, 71, 51, 76};
			nonDups = 68;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 68){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{13, 65, 45, 69, 51, 66, 21, 5, 40, 38, 8, 71, 51, 85, 82, 91, 61, 83, 17, 52, 55, 92, 39, 61, 9, 51, 99, 67, 63, 81, 65, 31, 94, 56, 35, 91, 52, 67, 73, 16, 78, 13, 33, 92, 67, 10, 68, 66, 29, 4, 21, 23, 79, 97, 24, 86, 3, 79, 19, 99, 70, 41, 88, 85, 90, 4, 91, 52, 13, 2, 83, 92, 47, 86, 29, 84, 82, 2, 54, 53, 54, 75, 21, 6, 9, 68, 76, 61, 17, 78, 63, 57, 16, 98, 81, 32, 49, 39, 36, 43, 64, 80, 91, 60, 96, 72, 43, 80, 94, 78, 94, 99, 55, 72, 65, 77, 39, 62, 93};
			nonDups = 72;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 72){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{17, 28, 98, 53, 28, 66, 56, 61, 64, 34, 7, 68, 20, 72, 40, 34, 4, 8, 12, 98, 85, 98, 27, 12, 34, 86, 82, 1, 4, 32, 60, 95, 13, 60, 7, 11, 9, 41, 39, 3, 34, 82, 82, 61, 1, 74, 50, 71, 26, 21, 4, 95, 92, 4, 73, 99, 11, 56, 14, 39, 31, 8, 14, 80, 18, 13, 37, 89, 99, 89, 6, 71, 26, 48, 5, 74, 80, 17, 69, 31, 31, 93, 92, 55, 99, 1, 77, 99, 99, 59, 29, 56, 75, 32, 36, 33, 32, 65, 86, 35, 15, 60, 85, 43, 43, 85, 29, 96, 9, 14, 14, 32, 50, 49, 59, 1, 92, 25, 8, 31, 15, 8};
			nonDups = 64;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 64){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{18, 25, 56, 74, 86, 89, 45, 16, 92, 62, 44, 19, 14, 95, 47, 13, 72, 18, 46, 35, 13, 17, 39, 34, 74, 10, 36, 0, 54, 89, 6, 4, 9, 66, 56, 87, 25, 93, 18, 85, 78, 55, 76, 4, 9, 94, 15, 92, 14, 52, 82, 84, 28, 81, 27, 92, 40, 71, 1, 72, 47, 95, 57, 42, 97, 11, 5, 37, 57, 74, 57, 14, 25, 52, 74, 52, 44, 72, 50, 51, 33, 24, 21, 72, 88, 80, 66, 49, 31, 22, 73, 56, 45, 42, 89, 43, 34, 10, 47, 48, 36, 45, 73, 39, 92, 78, 45, 37, 46, 16, 11, 86, 66, 8, 34, 68, 39};
			nonDups = 68;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 68){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{3, 55, 81, 85, 63, 29, 80, 23, 6, 15, 44, 80, 2, 44, 82, 95, 90, 23, 99, 70, 58, 21, 55, 47, 52, 82, 25, 23, 69, 7, 76, 37, 86, 52, 79, 37, 7, 78, 69, 95, 33, 72, 43, 48, 68, 84, 92, 12, 60, 52, 56, 77, 53, 65, 26, 91, 3, 17, 55, 81, 52, 1, 83, 61, 16, 59, 43, 40, 15, 14, 94, 5, 85, 14, 42, 84, 84, 32, 38, 35, 68, 80, 49, 9, 67, 55, 94, 87, 29, 48, 83, 73, 45, 9, 98, 49, 78, 38, 58, 42, 79, 82, 3, 56, 58, 91, 32, 24, 21, 89, 37, 97, 89, 79, 95, 10, 54, 35, 48, 39, 53, 87, 37, 34, 18, 32, 98, 50, 40, 70, 16, 60, 19, 18, 78, 93, 91, 65, 3, 61, 98, 11, 60, 5, 4, 1, 98, 49, 88, 35, 14, 70, 36, 37, 21, 10, 18, 25, 17, 3, 65};
			nonDups = 80;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 80){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{48, 53, 22, 80, 7, 20, 48, 6, 24, 73, 33, 91, 90, 24, 80, 95, 3, 82, 29, 48, 82, 30, 44, 22, 69, 97, 79, 32, 86, 63, 99, 6, 87, 21, 12, 48, 54, 70, 21, 74, 70, 46, 56, 33, 60, 9, 92, 33, 30, 33, 69, 69, 69, 3, 77, 37, 28, 73, 16, 83, 13, 2, 39, 62, 31, 42, 55, 11, 58, 64, 16, 73, 67, 69, 13, 52, 17, 55, 50, 82, 37, 56, 8, 23, 73, 58, 55, 72, 79, 37, 22, 44, 53, 80, 80, 50, 26, 48, 47, 93, 34, 74, 61, 22, 14, 95, 36, 40, 49, 94, 55, 55, 4, 39, 87, 51, 69, 84, 64, 12, 80, 65, 80, 63, 59, 57, 34, 12, 90, 55, 25, 56, 64, 39, 36, 9, 65, 35, 98, 24, 90, 42, 54, 63, 59, 13, 81, 65, 74, 87, 69, 11, 54, 78, 70, 17, 78, 37, 33, 94, 73, 16, 56, 62, 96};
			nonDups = 80;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 80){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{14, 43, 5, 70, 67, 46, 95, 96, 38, 99, 14, 29, 28, 90, 95, 91, 49, 95, 5, 24, 68, 92, 61, 83, 19, 25, 89, 97, 93, 63, 89, 26, 92, 34, 17, 57, 87, 36, 74, 86, 91, 16, 82, 28, 94, 84, 43, 76, 65, 19, 80, 25, 89, 58, 37, 84, 49, 66, 4, 8, 56, 19, 10, 76, 99, 37, 61, 70, 43, 68, 33, 8, 0, 70, 50, 37, 61, 44, 51, 17, 27, 37, 41, 2, 14, 97, 15, 12, 75, 42, 14, 44, 68, 69, 90, 74, 2, 23, 68, 72, 0, 90, 28, 39, 71, 28, 46, 64, 22, 44, 16, 40, 32, 64, 95, 18, 72, 67, 91, 2, 19, 3, 66, 72, 51, 71, 29, 30, 25, 36, 6, 23, 94, 58, 94, 45, 98, 30, 95, 18, 68, 62, 22, 4, 6, 73, 22, 90, 61, 5, 89, 3, 55, 11, 64, 13, 93, 26, 43, 30, 72, 89, 63, 57, 36, 59, 64, 60, 67, 61, 68};
			nonDups = 82;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 82){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{2, 38, 50, 35, 86, 52, 66, 5, 56, 62, 46, 42, 5, 67, 25, 43, 73, 62, 52, 88, 7, 30, 21, 98, 75, 35, 48, 87, 52, 45, 10, 83, 3, 43, 26, 22, 41, 54, 40, 9, 55, 97, 26, 51, 72, 55, 33, 61, 62, 44, 91, 86, 70, 51, 87, 81, 46, 76, 95, 5, 92, 94, 32, 8, 68, 81, 93, 3, 80, 76, 96, 2, 48, 78, 45, 23, 21, 86, 49, 46, 96, 8, 12, 85, 63, 10, 11, 85, 52, 89, 64, 1, 66, 26, 84, 74, 76, 17, 47, 80, 47, 97, 77, 29, 73, 44, 80, 56, 63, 14, 81, 62, 47, 59, 56, 48, 66, 91, 5, 8, 49, 58, 79, 7, 16, 75, 6, 84, 4, 25, 0, 20, 55, 5, 8, 42, 54, 88, 43, 57, 94, 79, 62, 84, 48, 33, 62, 6, 95, 56, 47, 67, 96, 7, 63, 48, 33, 92, 74, 63, 84, 17, 71, 47, 38, 69, 19, 64, 60, 15, 26};
			nonDups = 85;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 85){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{54, 61, 33, 3, 67, 9, 89, 49, 22, 27, 9, 0, 37, 62, 97, 18, 92, 66, 94, 3, 81, 84, 37, 8, 52, 2, 35, 4, 87, 37, 33, 12, 48, 37, 23, 27, 93, 0, 25, 7, 6, 83, 37, 68, 38, 38, 68, 14, 17, 3, 37, 69, 74, 7, 91, 33, 16, 89, 36, 24, 83, 8, 79, 90, 13, 96, 4, 64, 19, 64, 38, 81, 54, 51, 93, 69, 87, 21, 50, 6, 19, 69, 44, 82, 1, 21, 86, 52, 66, 82, 83, 11, 54, 79, 6, 58, 8, 73, 34, 77, 24, 65, 31, 65, 98, 46, 8, 95, 32, 57, 68, 55, 13, 79, 35, 9, 81, 42, 6, 23, 29, 52, 87, 50, 71, 9, 40, 52, 95, 12, 95, 23, 73, 55, 31, 1, 74, 84, 42, 72, 58};
			nonDups = 75;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 75){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{93, 84, 39, 21, 50, 39, 39, 61, 40, 79, 56, 63, 93, 61, 46, 83, 0, 31, 85, 85, 96, 86, 64, 13, 44, 49, 77, 64, 12, 41, 75, 43, 76, 81, 34, 41, 32, 61, 12, 65, 27, 92, 34, 10, 74, 63, 13, 26, 93, 5, 95, 25, 74, 64, 73, 15, 86, 98, 26, 61, 80, 46, 51, 43, 89, 41, 11, 14, 58, 38, 39, 57, 25, 86, 22, 83, 3, 16, 87, 91, 31, 9, 40, 9, 20, 68, 35, 35, 41, 2, 68, 52, 90, 56, 89, 54, 8, 90, 29, 50, 26, 21, 44, 14, 31, 72, 58, 15, 15, 1, 9, 49, 69, 31, 72, 1, 28, 99, 41, 98, 22, 76, 14, 83, 99, 76, 79, 37, 26, 74, 13, 16, 66, 74, 40, 48, 56, 44, 72, 31, 52, 85, 85, 57, 92, 63, 73, 49, 72, 67, 79, 23, 65, 66, 97, 72, 65, 93, 79, 59, 71, 79, 55, 32, 68, 10, 58, 27};
			nonDups = 79;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 79){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
			a = new Integer[]{4, 39, 96, 33, 24, 7, 31, 51, 55, 80, 32, 90, 16, 52, 45, 94, 5, 35, 58, 62, 69, 89, 87, 8, 80, 42, 86, 58, 29, 20, 57, 47, 24, 12, 26, 71, 60, 46, 77, 53, 96, 59, 39, 47, 94, 40, 35, 39, 82, 73, 35, 80, 13, 88, 22, 59, 17, 57, 54, 30, 68, 87, 34, 16, 98, 29, 0, 79, 81, 26, 88, 2, 60, 78, 88, 18, 48, 31, 0, 89, 18, 45, 43, 46, 73, 38, 86, 56, 76, 14, 9, 53, 49, 26, 96, 67, 5, 80, 11, 63, 92, 27, 48, 95, 62, 89, 91, 7, 16, 20, 32, 83, 65, 1, 42, 83, 56, 52, 0, 34, 67, 36, 88, 69, 34, 98, 29, 41, 98, 26, 34, 33, 94, 30, 78, 64, 71, 85, 19, 10, 96, 19, 1};
			nonDups = 80;
			answer = Assignment_08.howManyNonDuplicates(a);
			if(answer != 80){
				throw new Exception("Error with the howManyNonDuplicates method expected " + nonDups + " received " + answer + "");
			}
		}
		catch(Exception e) {
			System.err.println(e.getMessage());
			e.printStackTrace();
		}
		System.out.println("Ending testing for 08_27");

	}

}
